import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as a,c as u,a as n,d as l,b as s,e as c}from"./app-b50d6a31.js";const d={},r=c(`<h1 id="正则表达式" tabindex="-1"><a class="header-anchor" href="#正则表达式" aria-hidden="true">#</a> 正则表达式</h1><p>正则表达式可以用一些规定的字符类指定规则，并用来校验数据格式的合法性。</p><figure><img src="https://raw.githubusercontent.com/redyouzi/images-for-blog/main/img02/202208091404269.png" alt="image-20220809140425155" tabindex="0" loading="lazy"><figcaption>image-20220809140425155</figcaption></figure><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>regex</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test1</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//校验QQ号，5-10位</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">checkQQ</span><span class="token punctuation">(</span><span class="token string">&quot;11111111111&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">checkQQ</span><span class="token punctuation">(</span><span class="token string">&quot;11111&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">checkQQ</span><span class="token punctuation">(</span><span class="token string">&quot;1111144&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        <span class="token comment">//正则表达式</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">checkQQ2</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">checkQQ2</span><span class="token punctuation">(</span><span class="token class-name">String</span> qq<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> qq <span class="token operator">!=</span><span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> qq<span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span><span class="token string">&quot;\\\\d{5,10}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \\d 表示全是数字 { 5 , 10 } 表示5到10位</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">checkQQ</span><span class="token punctuation">(</span><span class="token class-name">String</span> qq<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>qq <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> qq<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">5</span> <span class="token operator">||</span> qq<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> qq<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">char</span> c <span class="token operator">=</span> qq<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">&lt;</span> <span class="token char">&#39;0&#39;</span> <span class="token operator">||</span> c <span class="token operator">&gt;</span> <span class="token char">&#39;9&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>正则表达式的规则：查阅JDK文档中的 Pattern</p><p>部分文档</p><h3 id="正则表达式结构摘要" tabindex="-1"><a class="header-anchor" href="#正则表达式结构摘要" aria-hidden="true">#</a> 正则表达式结构摘要</h3>`,7),p=n("thead",null,[n("tr",null,[n("th",null,"构造"),n("th",null,"匹配")])],-1),i=n("tr",null,[n("td"),n("td")],-1),_=n("tr",null,[n("td",null,"字符"),n("td")],-1),h=n("tr",null,[n("td",null,[n("em",null,"十")]),n("td",null,[l("字符"),n("em",null,"x")])],-1),m=n("tr",null,[n("td",null,[n("code",null,"\\\\")]),n("td",null,"反斜杠字符")],-1),k=n("tr",null,[n("td",null,[n("code",null,"\\0"),n("em",null,"n")]),n("td",null,[l("八进制值为"),n("code",null,"0"),n("em",null,"n"),l("（0 "),n("code",null,"<= "),n("em",null,"n"),l(),n("code",null,"<= "),l("7）的字符")])],-1),v=n("tr",null,[n("td",null,[n("code",null,"\\0"),n("em",null,"nn")]),n("td",null,[l("八进制值为"),n("code",null,"0"),n("em",null,"nn"),l("（0 "),n("code",null,"<= "),n("em",null,"n"),l(),n("code",null,"<= "),l("7）的字符")])],-1),b=n("tr",null,[n("td",null,[n("code",null,"\\0"),n("em",null,"mnn")]),n("td",null,[l("八进制值为"),n("code",null,"0"),n("em",null,"mnn"),l("（0 "),n("code",null,"<= "),n("em",null,"m"),l(),n("code",null,"<= "),l("3, 0 "),n("code",null,"<= "),n("em",null,"n"),l(),n("code",null,"<= "),l("7）的字符")])],-1),g=n("tr",null,[n("td",null,[n("code",null,"\\xhh")]),n("td",null,[l("十六进制值"),n("code",null,"0xhh"),n("em",null,"的"),l("字符")])],-1),f=n("tr",null,[n("td",null,[n("code",null,"\\uhhhhh")]),n("td",null,[l("十六进制值"),n("code",null,"0xhhhhhh"),n("em",null,"的"),l("字符")])],-1),X=n("td",null,[n("code",null,"\\x"),n("em",null,"{h...h}")],-1),x=n("code",null,"0x",-1),j=n("em",null,"h...h",-1),w={href:"https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#MIN_CODE_POINT",target:"_blank",rel:"noopener noreferrer"},y=n("code",null,"Character.MIN_CODE_POINT",-1),I=n("code",null,"0x",-1),q=n("em",null,"h...h",-1),P={href:"https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#MAX_CODE_POINT",target:"_blank",rel:"noopener noreferrer"},C=n("code",null,"Character.MAX_CODE_POINT",-1),S=n("tr",null,[n("td",null,[n("code",null,"\\t")]),n("td",null,[l("标签字符 ("),n("code",null,"'\\u0009'"),l(")")])],-1),A=n("tr",null,[n("td",null,[n("code",null,"\\n")]),n("td",null,[l("换行符（换行符）字符"),n("code",null,"（“\\u000A"),l("”）")])],-1),E=n("tr",null,[n("td",null,[n("code",null,"\\r")]),n("td",null,[l("回车字符"),n("code",null,"（“\\u000D"),l("”）")])],-1),N=n("tr",null,[n("td",null,[n("code",null,"\\f")]),n("td",null,[l("表单提要字符（"),n("code",null,"'\\u000C'"),l("）")])],-1),Q=n("tr",null,[n("td",null,[n("code",null,"\\a")]),n("td",null,[l("警告（铃铛）字符"),n("code",null,"（“\\u0007"),l("”）")])],-1),L=n("tr",null,[n("td",null,[n("code",null,"\\e")]),n("td",null,[l("转义字符（"),n("code",null,"'\\u001B'"),l("）")])],-1),z=n("tr",null,[n("td",null,[n("code",null,"\\cx")]),n("td",null,[l("与"),n("em",null,"x"),l("对应的控制字符")])],-1),D=n("tr",null,[n("td"),n("td")],-1),O=n("tr",null,[n("td",null,"字符类"),n("td")],-1),T=n("tr",null,[n("td",null,[n("code",null,"[abc]")]),n("td",null,[n("code",null,"a"),l("、"),n("code",null,"b"),l("或"),n("code",null,"c"),l("（简单类）")])],-1),U=n("tr",null,[n("td",null,[n("code",null,"[^abc]")]),n("td",null,[l("除"),n("code",null,"a"),l("、"),n("code",null,"b"),l("或"),n("code",null,"c"),l("以外的任何字符（否定）")])],-1),B=n("tr",null,[n("td",null,[n("code",null,"[a-zA-Z]")]),n("td",null,[n("code",null,"a"),l("通过"),n("code",null,"z"),l("或"),n("code",null,"A"),l("到"),n("code",null,"Z"),l("，包括（范围）")])],-1),M=n("tr",null,[n("td",null,[n("code",null,"[a-d[m-p]]")]),n("td",null,[n("code",null,"a"),l("通过"),n("code",null,"d"),l("，或"),n("code",null,"m"),l("通过"),n("code",null,"p"),l("："),n("code",null,"[a-dm-p]"),l("（工会）")])],-1),V=n("tr",null,[n("td",null,[n("code",null,"[a-z&&[def]]")]),n("td",null,[n("code",null,"d"),l("、"),n("code",null,"e"),l("或"),n("code",null,"f"),l("（交叉）")])],-1),G=n("tr",null,[n("td",null,[n("code",null,"[a-z&&[^bc]]")]),n("td",null,[n("code",null,"a"),l("通过"),n("code",null,"z"),l("，"),n("code",null,"b"),l("和"),n("code",null,"c"),l("除外："),n("code",null,"[ad-z]"),l("（减法）")])],-1),Z=n("tr",null,[n("td",null,[n("code",null,"[a-z&&[^m-p]]")]),n("td",null,[n("code",null,"a"),l("通过"),n("code",null,"z"),l("，而不是"),n("code",null,"m"),l("通过"),n("code",null,"p"),l("："),n("code",null,"[a-lq-z]"),l("（减法）")])],-1),F=n("tr",null,[n("td"),n("td")],-1),W=n("tr",null,[n("td",null,"预定义字符类"),n("td")],-1),Y=n("td",null,[n("code",null,"。")],-1),H={href:"https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html#lt",target:"_blank",rel:"noopener noreferrer"},J=n("tr",null,[n("td",null,[n("code",null,"\\d")]),n("td",null,[l("一个数字："),n("code",null,"[0-9]")])],-1),K=n("tr",null,[n("td",null,[n("code",null,"\\D")]),n("td",null,[l("非数字："),n("code",null,"[^0-9]")])],-1),R=n("tr",null,[n("td",null,[n("code",null,"\\h")]),n("td",null,[l("水平空白字符："),n("code",null,"[ \\t\\xA0\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000]")])],-1),$=n("tr",null,[n("td",null,[n("code",null,"\\H")]),n("td",null,[l("非水平空格字符："),n("code",null,"[^\\h]")])],-1),nn=n("tr",null,[n("td",null,[n("code",null,"\\s")]),n("td",null,[l("空格字符："),n("code",null,"[ \\t\\n\\x0B\\f\\r]")])],-1),ln=n("tr",null,[n("td",null,[n("code",null,"\\S")]),n("td",null,[l("非空格字符："),n("code",null,"[^\\s]")])],-1),tn=n("tr",null,[n("td",null,[n("code",null,"\\v")]),n("td",null,[l("垂直空格字符："),n("code",null,"[\\n\\x0B\\f\\r\\x85\\u2028\\u2029]")])],-1),sn=n("tr",null,[n("td",null,[n("code",null,"\\V")]),n("td",null,[l("非垂直空格字符："),n("code",null,"[^\\v]")])],-1),en=n("tr",null,[n("td",null,[n("code",null,"\\w")]),n("td",null,[l("单词字符："),n("code",null,"[a-zA-Z_0-9]")])],-1),on=n("tr",null,[n("td",null,[n("code",null,"\\W")]),n("td",null,[l("非单词字符："),n("code",null,"[^\\w]")])],-1),an=n("tr",null,[n("td"),n("td")],-1),un=n("tr",null,[n("td",null,[n("strong",null,"POSIX字符类（仅限US-ASCII）")]),n("td")],-1),cn=n("tr",null,[n("td",null,[n("code",null,"\\p{Lower}")]),n("td",null,[l("小写字母字符："),n("code",null,"[a-z]")])],-1),dn=n("tr",null,[n("td",null,[n("code",null,"\\p{Upper}")]),n("td",null,[l("大写字母字符："),n("code",null,"[A-Z]")])],-1),rn=n("tr",null,[n("td",null,[n("code",null,"\\p{ASCII}")]),n("td",null,[l("所有ASCII："),n("code",null,"[\\x00-\\x7F]")])],-1),pn=n("tr",null,[n("td",null,[n("code",null,"\\p{Alpha}")]),n("td",null,[l("按字母顺序排列的字符："),n("code",null,"[\\p{Lower}\\p{Upper}]")])],-1),_n=n("tr",null,[n("td",null,[n("code",null,"\\p{Digit}")]),n("td",null,[l("小数位数："),n("code",null,"[0-9]")])],-1),hn=n("tr",null,[n("td",null,[n("code",null,"\\p{Alnum}")]),n("td",null,[l("字母数字字符："),n("code",null,"[\\p{Alpha}\\p{Digit}]")])],-1),mn=n("tr",null,[n("td",null,[n("code",null,"\\p{Punct}")]),n("td",null,[l("标点符号：其中一个"),n("code",null,`!"#$%&'()*+,-./:;<=>?@[\\]^_`),l("{")])],-1),kn=n("tr",null,[n("td",null,[n("code",null,"\\p{Graph}")]),n("td",null,[l("可见字符："),n("code",null,"[\\p{Alnum}\\p{Punct}]")])],-1),vn=n("tr",null,[n("td",null,[n("code",null,"\\p{Print}")]),n("td",null,[l("可打印字符："),n("code",null,"[\\p{Graph}\\x20]")])],-1),bn=n("tr",null,[n("td",null,[n("code",null,"\\p{Blank}")]),n("td",null,[l("空格或标签页："),n("code",null,"[ \\t]")])],-1),gn=n("tr",null,[n("td",null,[n("code",null,"\\p{Cntrl}")]),n("td",null,[l("控制字符："),n("code",null,"[\\x00-\\x1F\\x7F]")])],-1),fn=n("tr",null,[n("td",null,[n("code",null,"\\p{XDigit}")]),n("td",null,[l("十六进制数字："),n("code",null,"[0-9a-fA-F]")])],-1),Xn=n("tr",null,[n("td",null,[n("code",null,"\\p{Space}")]),n("td",null,[l("空格字符："),n("code",null,"[ \\t\\n\\x0B\\f\\r]")])],-1),xn=n("tr",null,[n("td"),n("td")],-1),jn={href:"https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html#jcc",target:"_blank",rel:"noopener noreferrer"},wn=n("td",null,null,-1),yn=n("tr",null,[n("td",null,[n("code",null,"\\p{javaLowerCase}")]),n("td",null,"相当于java.lang.Character.isLowerCase()")],-1),In=n("tr",null,[n("td",null,[n("code",null,"\\p{javaUpperCase}")]),n("td",null,"相当于java.lang.Character.isUpperCase()")],-1),qn=n("tr",null,[n("td",null,[n("code",null,"\\p{javaWhitespace}")]),n("td",null,"相当于java.lang.Character.isWhitespace()")],-1),Pn=n("tr",null,[n("td",null,[n("code",null,"\\p{javaMirrored}")]),n("td",null,"相当于java.lang.Character.isMirrored()")],-1),Cn=n("tr",null,[n("td"),n("td")],-1),Sn=n("tr",null,[n("td",null,"Unicode脚本、块、类别和二进制属性的类"),n("td")],-1),An=n("td",null,[n("code",null,"\\p{IsLatin}")],-1),En={href:"https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html#usc",target:"_blank",rel:"noopener noreferrer"},Nn=n("td",null,[n("code",null,"\\p{InGreek}")],-1),Qn={href:"https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html#ubc",target:"_blank",rel:"noopener noreferrer"},Ln=n("td",null,[n("code",null,"\\p{Lu}")],-1),zn={href:"https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html#ucc",target:"_blank",rel:"noopener noreferrer"},Dn=n("td",null,[n("code",null,"\\p{IsAlphabetic}")],-1),On={href:"https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html#ubpc",target:"_blank",rel:"noopener noreferrer"},Tn=n("tr",null,[n("td",null,[n("code",null,"\\p{Sc}")]),n("td",null,"货币符号")],-1),Un=n("tr",null,[n("td",null,[n("code",null,"\\P{InGreek}")]),n("td",null,"除希腊语区块中的一个字符外的任何字符（否定）")],-1),Bn=n("tr",null,[n("td",null,[n("code",null,"[\\p{L}&&[^\\p{Lu}]]")]),n("td",null,"除大写字母（减法）以外的任何字母")],-1),Mn=n("tr",null,[n("td"),n("td")],-1),Vn=n("tr",null,[n("td",null,"边界匹配器"),n("td")],-1),Gn=n("tr",null,[n("td",null,[n("code",null,"^")]),n("td",null,"行的开头")],-1),Zn=n("tr",null,[n("td",null,[n("code",null,"¥")]),n("td",null,"行的末尾")],-1),Fn=n("tr",null,[n("td",null,[n("code",null,"\\b")]),n("td",null,"单词边界")],-1),Wn=n("tr",null,[n("td",null,[n("code",null,"\\B")]),n("td",null,"非字边界")],-1),Yn=n("tr",null,[n("td",null,[n("code",null,"\\A")]),n("td",null,"输入的开头")],-1),Hn=n("tr",null,[n("td",null,[n("code",null,"\\G")]),n("td",null,"上场比赛结束")],-1),Jn=n("td",null,[n("code",null,"\\Z")],-1),Kn={href:"https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html#lt",target:"_blank",rel:"noopener noreferrer"},Rn=n("tr",null,[n("td",null,[n("code",null,"\\z")]),n("td",null,"输入的结尾")],-1),$n=n("tr",null,[n("td"),n("td")],-1),nl=n("tr",null,[n("td",null,"越线匹配者"),n("td")],-1),ll=n("tr",null,[n("td",null,[n("code",null,"\\R")]),n("td",null,"任何Unicode换行序列都相当于`\\u000D\\u000A")],-1),tl=n("tr",null,[n("td"),n("td")],-1),sl=n("tr",null,[n("td",null,"贪婪的量词"),n("td")],-1),el=n("tr",null,[n("td",null,[n("em",null,"X"),n("code",null,"？")]),n("td",null,[n("em",null,"X"),l("，一次或根本不一次")])],-1),ol=n("tr",null,[n("td",null,[n("em",null,"X"),n("code",null,"*")]),n("td",null,[n("em",null,"X"),l("、零次或更多次")])],-1),al=n("tr",null,[n("td",null,[n("em",null,"X"),n("code",null,"+")]),n("td",null,[n("em",null,"X"),l("，一次或多次")])],-1),ul=n("tr",null,[n("td",null,[n("em",null,"X"),n("code",null,"{"),n("em",null,"n"),n("code",null,"}")]),n("td",null,[n("em",null,"X"),l("，正好是"),n("em",null,"n"),l("次")])],-1),cl=n("tr",null,[n("td",null,[n("em",null,"X"),n("code",null,"{"),n("em",null,"n"),n("code",null,"，}")]),n("td",null,[n("em",null,"X"),l("，至少"),n("em",null,"n"),l("次")])],-1),dl=n("tr",null,[n("td",null,[n("em",null,"X"),n("code",null,"{"),n("em",null,"n"),n("code",null,","),n("em",null,"m"),n("code",null,"}")]),n("td",null,[n("em",null,"X"),l("，至少"),n("em",null,"n次"),l("，但不超过"),n("em",null,"m"),l("次")])],-1),rl=n("tr",null,[n("td"),n("td")],-1),pl=n("tr",null,[n("td",null,"不愿意的量词"),n("td")],-1),il=n("tr",null,[n("td",null,[n("em",null,"X"),n("code",null,"??")]),n("td",null,[n("em",null,"X"),l("，一次或根本不一次")])],-1),_l=n("tr",null,[n("td",null,[n("em",null,"X"),n("code",null,"*？")]),n("td",null,[n("em",null,"X"),l("、零次或更多次")])],-1),hl=n("tr",null,[n("td",null,[n("em",null,"X"),n("code",null,"+？")]),n("td",null,[n("em",null,"X"),l("，一次或多次")])],-1),ml=n("tr",null,[n("td",null,[n("em",null,"X"),n("code",null,"{"),n("em",null,"n"),n("code",null,"}？")]),n("td",null,[n("em",null,"X"),l("，正好是"),n("em",null,"n"),l("次")])],-1),kl=n("tr",null,[n("td",null,[n("em",null,"X"),n("code",null,"{"),n("em",null,"n"),n("code",null,",}？")]),n("td",null,[n("em",null,"X"),l("，至少"),n("em",null,"n"),l("次")])],-1),vl=n("tr",null,[n("td",null,[n("em",null,"X"),n("code",null,"{"),n("em",null,"n"),n("code",null,","),n("em",null,"m"),n("code",null,"}？")]),n("td",null,[n("em",null,"X"),l("，至少"),n("em",null,"n次"),l("，但不超过"),n("em",null,"m"),l("次")])],-1),bl=n("tr",null,[n("td"),n("td")],-1),gl=n("tr",null,[n("td",null,"拥有量词"),n("td")],-1),fl=n("tr",null,[n("td",null,[n("em",null,"X"),n("code",null,"？+")]),n("td",null,[n("em",null,"X"),l("，一次或根本不一次")])],-1),Xl=n("tr",null,[n("td",null,[n("em",null,"X"),n("code",null,"*+")]),n("td",null,[n("em",null,"X"),l("、零次或更多次")])],-1),xl=n("tr",null,[n("td",null,[n("em",null,"X"),n("code",null,"++")]),n("td",null,[n("em",null,"X"),l("，一次或多次")])],-1),jl=n("tr",null,[n("td",null,[n("em",null,"X"),n("code",null,"{"),n("em",null,"n"),n("code",null,"}+")]),n("td",null,[n("em",null,"X"),l("，正好是"),n("em",null,"n"),l("次")])],-1),wl=n("tr",null,[n("td",null,[n("em",null,"X"),n("code",null,"{"),n("em",null,"n"),n("code",null,",}+")]),n("td",null,[n("em",null,"X"),l("，至少"),n("em",null,"n"),l("次")])],-1),yl=n("tr",null,[n("td",null,[n("em",null,"X"),n("code",null,"{"),n("em",null,"n"),n("code",null,","),n("em",null,"m"),n("code",null,"}+")]),n("td",null,[n("em",null,"X"),l("，至少"),n("em",null,"n次"),l("，但不超过"),n("em",null,"m"),l("次")])],-1),Il=n("tr",null,[n("td"),n("td")],-1),ql=n("tr",null,[n("td",null,"逻辑运算符"),n("td")],-1),Pl=n("tr",null,[n("td",null,[n("em",null,"XY")]),n("td",null,[n("em",null,"X"),l(" 后跟 "),n("em",null,"Y")])],-1),Cl=n("tr",null,[n("td",null,[n("em",null,"X"),l("`")]),n("td",null,[l("`"),n("em",null,"Y")])],-1),Sl=n("td",null,[n("code",null,"（"),n("em",null,"十"),n("code",null,"）")],-1),Al={href:"https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html#cg",target:"_blank",rel:"noopener noreferrer"},El=n("tr",null,[n("td"),n("td")],-1),Nl=n("tr",null,[n("td",null,"背面参考"),n("td")],-1),Ql=n("td",null,[n("code",null,"\\"),n("em",null,"n")],-1),Ll=n("em",null,"n",-1),zl={href:"https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html#cg",target:"_blank",rel:"noopener noreferrer"},Dl=n("td",null,[n("code",null,"\\"),n("em",null,"k"),l("<"),n("em",null,"name"),l(">")],-1),Ol={href:"https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html#groupname",target:"_blank",rel:"noopener noreferrer"},Tl=n("tr",null,[n("td"),n("td")],-1),Ul=n("tr",null,[n("td",null,"报价"),n("td")],-1),Bl=n("tr",null,[n("td",null,[n("code",null,"\\")]),n("td",null,"没什么，但引用以下字符")],-1),Ml=n("tr",null,[n("td",null,[n("code",null,"\\Q")]),n("td",null,[l("没什么，而是引用所有字符，直到"),n("code",null,"\\E")])],-1),Vl=n("tr",null,[n("td",null,[n("code",null,"\\E")]),n("td",null,[l("没什么，但以"),n("code",null,"\\Q"),l("开头的结束引用")])],-1),Gl=n("tr",null,[n("td"),n("td")],-1),Zl=n("tr",null,[n("td",null,"特殊构造（命名捕获和非捕获）"),n("td")],-1),Fl=n("tr",null,[n("td",null,[n("code",null,"（？<name>"),n("em",null,"X"),n("code",null,"）")]),n("td",null,[n("em",null,"X"),l("，作为一个命名捕获组")])],-1),Wl=n("tr",null,[n("td",null,[n("code",null,"(?:"),n("em",null,"X"),n("code",null,")")]),n("td",null,[n("em",null,"X"),l("，作为一个非捕获组")])],-1),Yl=n("td",null,[n("code",null,"（？idmsuxU-idmsuxU）")],-1),Hl={href:"https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html#CASE_INSENSITIVE",target:"_blank",rel:"noopener noreferrer"},Jl=n("td",null,[n("code",null,"（？idmsux-idmsux:"),n("em",null,"X"),n("code",null,"）")],-1),Kl=n("em",null,"X",-1),Rl={href:"https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html#cg",target:"_blank",rel:"noopener noreferrer"},$l={href:"https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html#CASE_INSENSITIVE",target:"_blank",rel:"noopener noreferrer"},nt={href:"https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html#UNIX_LINES",target:"_blank",rel:"noopener noreferrer"},lt={href:"https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html#MULTILINE",target:"_blank",rel:"noopener noreferrer"},tt={href:"https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html#DOTALL",target:"_blank",rel:"noopener noreferrer"},st={href:"https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html#UNICODE_CASE",target:"_blank",rel:"noopener noreferrer"},et={href:"https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html#COMMENTS",target:"_blank",rel:"noopener noreferrer"},ot=n("tr",null,[n("td",null,[n("code",null,"（？="),n("em",null,"X"),n("code",null,"）")]),n("td",null,[n("em",null,"X"),l("，通过零宽度正向往前看")])],-1),at=n("tr",null,[n("td",null,[n("code",null,"（？！"),n("em",null,"十"),n("code",null,"）")]),n("td",null,[n("em",null,"X"),l("，通过零宽度负展望")])],-1),ut=n("tr",null,[n("td",null,[n("code",null,"（？<="),n("em",null,"X"),n("code",null,")")]),n("td",null,[n("em",null,"X"),l("，通过零宽度正向后看")])],-1),ct=n("tr",null,[n("td",null,[n("code",null,"（？<！"),n("em",null,"十"),n("code",null,"）")]),n("td",null,[n("em",null,"X"),l("，通过零宽度负视角")])],-1),dt=n("tr",null,[n("td",null,[n("code",null,"（？>"),n("em",null,"X"),n("code",null,"）")]),n("td",null,[n("em",null,"X"),l("，作为一个独立的、非俘获的团体")])],-1);function rt(pt,it){const t=o("ExternalLinkIcon");return a(),u("div",null,[r,n("table",null,[p,n("tbody",null,[i,_,h,m,k,v,b,g,f,n("tr",null,[X,n("td",null,[l("The character with hexadecimal value "),x,j,l(" ("),n("a",w,[y,s(t)]),l(" <= "),I,q,l(" <= "),n("a",P,[C,s(t)]),l(")")])]),S,A,E,N,Q,L,z,D,O,T,U,B,M,V,G,Z,F,W,n("tr",null,[Y,n("td",null,[l("任何字符（可能匹配也可能不匹配"),n("a",H,[l("行终止符"),s(t)]),l("）")])]),J,K,R,$,nn,ln,tn,sn,en,on,an,un,cn,dn,rn,pn,_n,hn,mn,kn,vn,bn,gn,fn,Xn,xn,n("tr",null,[n("td",null,[l("java.lang.字符类（简单的"),n("a",jn,[l("java字符类型"),s(t)]),l("）")]),wn]),yn,In,qn,Pn,Cn,Sn,n("tr",null,[An,n("td",null,[l("拉丁字母字符（"),n("a",En,[l("脚本"),s(t)]),l("）")])]),n("tr",null,[Nn,n("td",null,[l("希腊区块（"),n("a",Qn,[l("区块"),s(t)]),l("）中的一个字符")])]),n("tr",null,[Ln,n("td",null,[l("大写字母（"),n("a",zn,[l("类别"),s(t)]),l("）")])]),n("tr",null,[Dn,n("td",null,[l("按字母顺序排列的字符（"),n("a",On,[l("二进制属性"),s(t)]),l("）")])]),Tn,Un,Bn,Mn,Vn,Gn,Zn,Fn,Wn,Yn,Hn,n("tr",null,[Jn,n("td",null,[l("输入的结尾，但对于最终"),n("a",Kn,[l("终止者"),s(t)]),l("，如果有的话")])]),Rn,$n,nl,ll,tl,sl,el,ol,al,ul,cl,dl,rl,pl,il,_l,hl,ml,kl,vl,bl,gl,fl,Xl,xl,jl,wl,yl,Il,ql,Pl,Cl,n("tr",null,[Sl,n("td",null,[l("X，作为一个"),n("a",Al,[l("捕获组"),s(t)])])]),El,Nl,n("tr",null,[Ql,n("td",null,[l("无论第"),Ll,l("个"),n("a",zl,[l("捕获组"),s(t)]),l("匹配什么")])]),n("tr",null,[Dl,n("td",null,[l("无论"),n("a",Ol,[l("命名捕获组的"),s(t)]),l("“名称”匹配什么")])]),Tl,Ul,Bl,Ml,Vl,Gl,Zl,Fl,Wl,n("tr",null,[Yl,n("td",null,[l("没什么，但打开火柴的旗帜，"),n("a",Hl,[l("我"),s(t)]),l("打开-关闭")])]),n("tr",null,[Jl,n("td",null,[Kl,l("，作为一个带有给定标志"),n("a",Rl,[l("的非捕获组"),s(t)]),l("，"),n("a",$l,[l("i "),s(t)]),n("a",nt,[l("d "),s(t)]),n("a",lt,[l("m "),s(t)]),n("a",tt,[l("s "),s(t)]),n("a",st,[l("u "),s(t)]),n("a",et,[l("x "),s(t)]),l("on - off")])]),ot,at,ut,ct,dt])])])}const mt=e(d,[["render",rt],["__file","regular-expression.html.vue"]]);export{mt as default};
