import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as p,c as o,a,d as s,b as e,e as t}from"./app-058042d0.js";const c={},r=t(`<h1 id="linux上部署各类软件" tabindex="-1"><a class="header-anchor" href="#linux上部署各类软件" aria-hidden="true">#</a> Linux上部署各类软件</h1><h2 id="注意" tabindex="-1"><a class="header-anchor" href="#注意" aria-hidden="true">#</a> 注意</h2><p>下面全部的软件安装的相关流程，90%都是取自软件自身的官方网站。</p><p>一个合格的程序员要有良好的信息收集能力哦</p><h1 id="mysql数据库管理系统安装部署【简单】" tabindex="-1"><a class="header-anchor" href="#mysql数据库管理系统安装部署【简单】" aria-hidden="true">#</a> MySQL数据库管理系统安装部署【简单】</h1><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2><p>MySQL数据库管理系统（后续简称MySQL），是一款知名的数据库系统，其特点是：轻量、简单、功能丰富。</p><p>MySQL数据库可谓是软件行业的明星产品，无论是后端开发、大数据、AI、运维、测试等各类岗位，基本上都会和MySQL打交道。</p><p>让我们从MySQL开始，进行实战的Linux软件安装部署。</p><p>本次课程分为2个版本进行安装：</p><ul><li>MySQL 5.7版本安装</li><li>MySQL 8.x版本安装</li></ul><blockquote><p>由于MySQL5.x和8.x各自有许多使用者，所以这两个版本我们都演示安装一遍</p></blockquote><h2 id="mysql5-7版本在centos系统安装" tabindex="-1"><a class="header-anchor" href="#mysql5-7版本在centos系统安装" aria-hidden="true">#</a> MySQL5.7版本在CentOS系统安装</h2><blockquote><p>注意：安装操作需要root权限</p></blockquote><p>MySQL的安装我们可以通过前面学习的yum命令进行。</p><h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h3><ol><li><p>配置yum仓库</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 更新密钥</span>
<span class="token function">rpm</span> <span class="token parameter variable">--import</span> https://repo.mysql.com/RPM-GPG-KEY-mysql-2022

<span class="token comment"># 安装Mysql yum库</span>
<span class="token function">rpm</span> <span class="token parameter variable">-Uvh</span> http://repo.mysql.com//mysql57-community-release-el7-7.noarch.rpm
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://blog-images-1309758663.cos.ap-nanjing.myqcloud.com/202304041248447.png" alt="image-20221012182514865" tabindex="0" loading="lazy"><figcaption>image-20221012182514865</figcaption></figure><blockquote><p>由于MySQL并不在CentOS的官方仓库中，所以我们通过上述rpm命令：</p><ul><li>导入MySQL仓库的密钥</li><li>配置MySQLQ的yum仓库</li></ul></blockquote></li><li><p>使用yum安装MySQL</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># yum安装Mysql</span>
yum <span class="token parameter variable">-y</span> <span class="token function">install</span> mysql-community-server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>安装完成后，启动MySQL并配置开机自启动</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl start mysqld		<span class="token comment"># 启动</span>
systemctl <span class="token builtin class-name">enable</span> mysqld		<span class="token comment"># 开机自启</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>MySQL安装完成后，会自动配置为名称叫做：<code>mysqld</code>的服务，可以被systemctl所管理</p></blockquote></li><li><p>检查MySQL的运行状态</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl status mysqld
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://blog-images-1309758663.cos.ap-nanjing.myqcloud.com/202304041248340.png" alt="image-20221012182716598" tabindex="0" loading="lazy"><figcaption>image-20221012182716598</figcaption></figure></li></ol><h3 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h3><p>主要配置管理员用户root的密码以及配置允许远程登录的权限。</p><ol><li><p>获取MySQL的初始密码</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 通过grep命令，在/var/log/mysqld.log文件中，过滤temporary password关键字，得到初始密码</span>
<span class="token function">grep</span> <span class="token string">&#39;temporary password&#39;</span> /var/log/mysqld.log
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://blog-images-1309758663.cos.ap-nanjing.myqcloud.com/202304041248334.png" alt="image-20221012182744115" tabindex="0" loading="lazy"><figcaption>image-20221012182744115</figcaption></figure></li><li><p>登陆MySQL数据库系统</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 执行</span>
mysql <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p</span>
<span class="token comment"># 解释</span>
<span class="token comment"># -u，登陆的用户，MySQL数据库的管理员用户同Linux一样，是root</span>
<span class="token comment"># -p，表示使用密码登陆</span>

<span class="token comment"># 执行完毕后输入刚刚得到的初始密码，即可进入MySQL数据库</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>修改root用户密码</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 在MySQL控制台内执行</span>
<span class="token keyword">ALTER</span> <span class="token keyword">USER</span> <span class="token string">&#39;root&#39;</span><span class="token variable">@&#39;localhost&#39;</span> IDENTIFIED <span class="token keyword">BY</span> <span class="token string">&#39;密码&#39;</span><span class="token punctuation">;</span>	<span class="token comment">-- 密码需要符合：大于8位，有大写字母，有特殊符号，不能是连续的简单语句如123，abc</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>退出MySQL控制台页面</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 退出命令</span>
<span class="token keyword">exit</span>

<span class="token comment"># 或者通过快捷键退出：ctrl + d</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>检查端口</p><p>MySQL默认绑定了3306端口，可以通过端口占用检查MySQL的网络状态</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">netstat</span> <span class="token parameter variable">-anp</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token number">3306</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/12/20221012183746.png" alt="image-20221012183746802" tabindex="0" loading="lazy"><figcaption>image-20221012183746802</figcaption></figure></li></ol><p>至此，MySQL就安装完成并可用了，请妥善保存好MySQL的root密码。</p><h2 id="mysql8-0版本在centos系统安装" tabindex="-1"><a class="header-anchor" href="#mysql8-0版本在centos系统安装" aria-hidden="true">#</a> MySQL8.0版本在CentOS系统安装</h2><blockquote><p>注意：安装操作需要root权限</p></blockquote><h3 id="安装-1" tabindex="-1"><a class="header-anchor" href="#安装-1" aria-hidden="true">#</a> 安装</h3><ol><li><p>配置yum仓库</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 更新密钥</span>
<span class="token function">rpm</span> <span class="token parameter variable">--import</span> https://repo.mysql.com/RPM-GPG-KEY-mysql-2022

<span class="token comment"># 安装Mysql8.x版本 yum库</span>
<span class="token function">rpm</span> <span class="token parameter variable">-Uvh</span> https://dev.mysql.com/get/mysql80-community-release-el7-2.noarch.rpm
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>使用yum安装MySQL</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># yum安装Mysql</span>
yum <span class="token parameter variable">-y</span> <span class="token function">install</span> mysql-community-server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>安装完成后，启动MySQL并配置开机自启动</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl start mysqld		<span class="token comment"># 启动</span>
systemctl <span class="token builtin class-name">enable</span> mysqld		<span class="token comment"># 开机自启</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>MySQL安装完成后，会自动配置为名称叫做：<code>mysqld</code>的服务，可以被systemctl所管理</p></blockquote></li><li><p>检查MySQL的运行状态</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl status mysqld
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h3 id="配置-1" tabindex="-1"><a class="header-anchor" href="#配置-1" aria-hidden="true">#</a> 配置</h3><p>主要修改root密码和允许root远程登录</p><ol><li><p>获取MySQL的初始密码</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 通过grep命令，在/var/log/mysqld.log文件中，过滤temporary password关键字，得到初始密码</span>
<span class="token function">grep</span> <span class="token string">&#39;temporary password&#39;</span> /var/log/mysqld.log
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>登录MySQL数据库系统</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 执行</span>
mysql <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p</span>
<span class="token comment"># 解释</span>
<span class="token comment"># -u，登陆的用户，MySQL数据库的管理员用户同Linux一样，是root</span>
<span class="token comment"># -p，表示使用密码登陆</span>

<span class="token comment"># 执行完毕后输入刚刚得到的初始密码，即可进入MySQL数据库</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>修改root密码</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">USER</span> <span class="token string">&#39;root&#39;</span><span class="token variable">@&#39;localhost&#39;</span> IDENTIFIED <span class="token keyword">WITH</span> mysql_native_password <span class="token keyword">BY</span> <span class="token string">&#39;密码&#39;</span><span class="token punctuation">;</span>	<span class="token comment">-- 密码需要符合：大于8位，有大写字母，有特殊符号，不能是连续的简单语句如123，abc</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>[扩展]，配置root的简单密码</p><blockquote><p>我们可以给root设置简单密码，如123456.</p><p>请注意，此配置仅仅是用于测试环境或学习环境的MySQL，如果是正式使用，请勿设置简单密码</p></blockquote><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">set</span> <span class="token keyword">global</span> validate_password<span class="token punctuation">.</span>policy<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>		<span class="token comment"># 密码安全级别低</span>
<span class="token keyword">set</span> <span class="token keyword">global</span> validate_password<span class="token punctuation">.</span>length<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">;</span>		<span class="token comment"># 密码长度最低4位即可</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>允许root远程登录，并设置远程登录密码</p><blockquote><p>默认情况下，root用户是不运行远程登录的，只允许在MySQL所在的Linux服务器登陆MySQL系统</p><p>请注意，允许root远程登录会带来安全风险</p></blockquote><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 第一次设置root远程登录，并配置远程密码使用如下SQL命令</span>
<span class="token keyword">create</span> <span class="token keyword">user</span> <span class="token string">&#39;root&#39;</span><span class="token variable">@&#39;%&#39;</span> IDENTIFIED <span class="token keyword">WITH</span> mysql_native_password <span class="token keyword">BY</span> <span class="token string">&#39;密码!&#39;</span><span class="token punctuation">;</span>	<span class="token comment">-- 密码需要符合：大于8位，有大写字母，有特殊符号，不能是连续的简单语句如123，abc</span>

<span class="token comment"># 后续修改密码使用如下SQL命令</span>
<span class="token keyword">ALTER</span> <span class="token keyword">USER</span> <span class="token string">&#39;root&#39;</span><span class="token variable">@&#39;%&#39;</span> IDENTIFIED <span class="token keyword">WITH</span> mysql_native_password <span class="token keyword">BY</span> <span class="token string">&#39;密码&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>退出MySQL控制台页面</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 退出命令</span>
<span class="token keyword">exit</span>

<span class="token comment"># 或者通过快捷键退出：ctrl + d</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>检查端口</p><p>MySQL默认绑定了3306端口，可以通过端口占用检查MySQL的网络状态</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">netstat</span> <span class="token parameter variable">-anp</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token number">3306</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/12/20221012192303.png" alt="image-20221012192303607" tabindex="0" loading="lazy"><figcaption>image-20221012192303607</figcaption></figure></li></ol><p>至此，MySQL就安装完成并可用了，请妥善保存好MySQL的root密码。</p><h1 id="tomcat安装部署【简单】" tabindex="-1"><a class="header-anchor" href="#tomcat安装部署【简单】" aria-hidden="true">#</a> Tomcat安装部署【简单】</h1><h2 id="简介-1" tabindex="-1"><a class="header-anchor" href="#简介-1" aria-hidden="true">#</a> 简介</h2><p>Tomcat 是由 Apache 开发的一个 Servlet 容器，实现了对 Servlet 和 JSP 的支持，并提供了作为Web服务器的一些特有功能，如Tomcat管理和控制平台、安全域管理和Tomcat阀等。</p><p>简单来说，Tomcat是一个WEB应用程序的托管平台，可以让用户编写的WEB应用程序，被Tomcat所托管，并提供网站服务。</p><blockquote><p>即让用户开发的WEB应用程序，变成可以被访问的网页。</p></blockquote><h2 id="安装-2" tabindex="-1"><a class="header-anchor" href="#安装-2" aria-hidden="true">#</a> 安装</h2><p>Tomcat的安装非常简单，主要分为2部分：</p><ol><li>安装JDK环境</li><li>解压并安装Tomcat</li></ol><blockquote><p>本次安装使用Tomcat版本是：10.0.27版本，需要Java（JDK）版本最低为JDK8或更高版本</p><p>使用的JDK版本是：JDK8u351版本</p></blockquote><h3 id="安装jdk环境" tabindex="-1"><a class="header-anchor" href="#安装jdk环境" aria-hidden="true">#</a> 安装JDK环境</h3>`,39),d=a("p",null,"下载JDK软件",-1),u={href:"https://www.oracle.com/java/technologies/downloads",target:"_blank",rel:"noopener noreferrer"},v=a("p",null,"在页面下方找到：",-1),m=a("img",{src:"https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/17/20221017163411.png",alt:"image-20221017163411651",style:{zoom:"67%"}},null,-1),b=a("p",null,[s("下载"),a("code",null,"jdk-8u351-linux-x64.tar.gz")],-1),k=a("figure",null,[a("img",{src:"https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/17/20221017163440.png",alt:"image-20221017163440491",tabindex:"0",loading:"lazy"}),a("figcaption",null,"image-20221017163440491")],-1),g=a("p",null,[a("mark",null,"在弹出的页面中输入Oracle的账户密码即可下载（如无账户，请自行注册，注册是免费的）")],-1),h=t(`<li><p>登陆Linux系统，切换到root用户</p></li><li><p>通过FinalShell，上传下载好的JDK安装包</p><figure><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/17/20221017163706.png" alt="image-20221017163706026" tabindex="0" loading="lazy"><figcaption>image-20221017163706026</figcaption></figure></li><li><p>创建文件夹，用来部署JDK，将JDK和Tomcat都安装部署到：/export/server 内</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /export/server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>解压缩JDK安装文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> jdk-8u351-linux-x64.tar.gz <span class="token parameter variable">-C</span> /export/server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>配置JDK的软链接</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ln</span> <span class="token parameter variable">-s</span> /export/server/jdk1.8.0_351 /export/server/jdk
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>配置JAVA_HOME环境变量，以及将$JAVA_HOME/bin文件夹加入PATH环境变量中</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 编辑/etc/profile文件</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/export/server/jdk
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$JAVA_HOME</span>/bin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>生效环境变量</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">source</span> /etc/profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>配置java执行程序的软链接</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 删除系统自带的java程序</span>
<span class="token function">rm</span> <span class="token parameter variable">-f</span> /usr/bin/java
<span class="token comment"># 软链接我们自己安装的java程序</span>
<span class="token function">ln</span> <span class="token parameter variable">-s</span> /export/server/jdk/bin/java /usr/bin/java
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行验证：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">java</span> <span class="token parameter variable">-version</span>
javac <span class="token parameter variable">-version</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li>`,9),f=a("h3",{id:"解压并部署tomcat",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#解压并部署tomcat","aria-hidden":"true"},"#"),s(" 解压并部署Tomcat")],-1),x=a("blockquote",null,[a("p",null,"Tomcat建议使用非Root用户安装并启动"),a("p",null,"可以创建一个用户：tomcat用以部署(可以有效防止服务器被黑)")],-1),y=t(`<li><p>首先，放行tomcat需要使用的8080端口的外部访问权限</p><blockquote><p>CentOS系统默认开启了防火墙，阻止外部网络流量访问系统内部</p><p>所以，如果想要Tomcat可以正常使用，需要对Tomcat默认使用的8080端口进行放行</p><p>放行有2种操作方式：</p><ol><li>关闭防火墙</li><li>配置防火墙规则，放行端口</li></ol></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 以下操作2选一即可</span>
<span class="token comment"># 方式1：关闭防火墙</span>
systemctl stop firewalld		<span class="token comment"># 关闭防火墙</span>
systemctl disable firewalld		<span class="token comment"># 停止防火墙开机自启</span>

<span class="token comment"># 方式2：放行8080端口的外部访问</span>
firewall-cmd --add-port<span class="token operator">=</span><span class="token number">8080</span>/tcp <span class="token parameter variable">--permanent</span>		<span class="token comment"># --add-port=8080/tcp表示放行8080端口的tcp访问，--permanent表示永久生效</span>
firewall-cmd <span class="token parameter variable">--reload</span>								<span class="token comment"># 重新载入防火墙规则使其生效</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>方便起见，建议同学们选择方式1，直接关闭防火墙一劳永逸</p><p>防火墙的配置非常复杂，后面会视情况独立出一集防火墙配置规则的章节。</p></blockquote></li><li><p>以root用户操作，创建tomcat用户</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 使用root用户操作</span>
<span class="token function">useradd</span> tomcat
<span class="token comment"># 可选，为tomcat用户配置密码</span>
<span class="token function">passwd</span> tomcat
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>下载Tomcat安装包</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 使用root用户操作</span>
<span class="token function">wget</span> https://dlcdn.apache.org/tomcat/tomcat-10/v10.0.27/bin/apache-tomcat-10.0.27.tar.gz
<span class="token comment"># 如果出现https相关错误，可以使用--no-check-certificate选项</span>
<span class="token function">wget</span> --no-check-certificate https://dlcdn.apache.org/tomcat/tomcat-10/v10.0.27/bin/apache-tomcat-10.0.27.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>如果Linux内下载过慢，可以复制下载链接在Windows系统中使用迅雷等软件加速下载然后上传到Linux内即可</p></blockquote></li><li><p>解压Tomcat安装包</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 使用root用户操作，否则无权限解压到/export/server内，除非修改此文件夹权限</span>
<span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> apache-tomcat-10.0.27.tar.gz <span class="token parameter variable">-C</span> /export/server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>创建Tomcat软链接</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 使用root用户操作</span>
<span class="token function">ln</span> <span class="token parameter variable">-s</span> /export/server/apache-tomcat-10.0.27 /export/server/tomcat
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>修改tomcat安装目录权限</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 使用root用户操作，同时对软链接和tomcat安装文件夹进行修改，使用通配符*进行匹配</span>
<span class="token function">chown</span> <span class="token parameter variable">-R</span> tomcat:tomcat /export/server/*tomcat*
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>切换到tomcat用户</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">su</span> - tomcat
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>启动tomcat</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/export/server/tomcat/bin/startup.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>tomcat启动在8080端口，可以检查是否正常启动成功</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">netstat</span> <span class="token parameter variable">-anp</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token number">8080</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/17/20221017223814.png" alt="image-20221017223814737" tabindex="0" loading="lazy"><figcaption>image-20221017223814737</figcaption></figure></li>`,9),_=a("p",null,"打开浏览器，输入：",-1),q={href:"http://192.168.88.130:8080",target:"_blank",rel:"noopener noreferrer"},S=a("p",null,"使用主机名（需配置好本地的主机名映射）或IP地址访问Tomcat的WEB页面",-1),E=a("figure",null,[a("img",{src:"https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/17/20221017223915.png",alt:"image-20221017223915498",tabindex:"0",loading:"lazy"}),a("figcaption",null,"image-20221017223915498")],-1),z=t('<p>至此，Tomcat安装配置完成。</p><h1 id="nginx安装部署【简单】" tabindex="-1"><a class="header-anchor" href="#nginx安装部署【简单】" aria-hidden="true">#</a> Nginx安装部署【简单】</h1><h2 id="简介-2" tabindex="-1"><a class="header-anchor" href="#简介-2" aria-hidden="true">#</a> 简介</h2><p><em>Nginx</em> (engine x) 是一个高性能的HTTP和反向代理web服务器，同时也提供了IMAP/POP3/SMTP服务。</p><p>同Tomcat一样，Nginx可以托管用户编写的WEB应用程序成为可访问的网页服务，同时也可以作为流量代理服务器，控制流量的中转。</p><p>Nginx在WEB开发领域，基本上也是必备组件之一了。</p><h2 id="安装-3" tabindex="-1"><a class="header-anchor" href="#安装-3" aria-hidden="true">#</a> 安装</h2><p>Nginx同样需要配置额外的yum仓库，才可以使用yum安装</p><blockquote><p>安装Nginx的操作需要root身份</p></blockquote>',9),H=t(`<li><p>安装yum依赖程序</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># root执行</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> yum-utils
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>手动添加，nginx的yum仓库</p><p>yum程序使用的仓库配置文件，存放在：<code>/etc/yum.repo.d</code>内。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># root执行</span>
<span class="token comment"># 创建文件使用vim编辑</span>
<span class="token function">vim</span> /etc/yum.repos.d/nginx.repo
<span class="token comment"># 填入如下内容并保存退出</span>
<span class="token punctuation">[</span>nginx-stable<span class="token punctuation">]</span>
<span class="token assign-left variable">name</span><span class="token operator">=</span>nginx stable repo
<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>http://nginx.org/packages/centos/<span class="token variable">$releasever</span>/<span class="token variable">$basearch</span>/
<span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">gpgkey</span><span class="token operator">=</span>https://nginx.org/keys/nginx_signing.key
<span class="token assign-left variable">module_hotfixes</span><span class="token operator">=</span>true

<span class="token punctuation">[</span>nginx-mainline<span class="token punctuation">]</span>
<span class="token assign-left variable">name</span><span class="token operator">=</span>nginx mainline repo
<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>http://nginx.org/packages/mainline/centos/<span class="token variable">$releasever</span>/<span class="token variable">$basearch</span>/
<span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">0</span>
<span class="token assign-left variable">gpgkey</span><span class="token operator">=</span>https://nginx.org/keys/nginx_signing.key
<span class="token assign-left variable">module_hotfixes</span><span class="token operator">=</span>true
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>通过如上操作，我们手动添加了nginx的yum仓库</p></blockquote></li><li><p>通过yum安装最新稳定版的nginx</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># root执行</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>启动</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># nginx自动注册了systemctl系统服务</span>
systemctl start nginx		<span class="token comment"># 启动</span>
systemctl stop nginx		<span class="token comment"># 停止</span>
systemctl status nginx		<span class="token comment"># 运行状态</span>
systemctl <span class="token builtin class-name">enable</span> nginx		<span class="token comment"># 开机自启</span>
systemctl disable nginx		<span class="token comment"># 关闭开机自启</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>配置防火墙放行</p><p>nginx默认绑定80端口，需要关闭防火墙或放行80端口</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 方式1（推荐），关闭防火墙</span>
systemctl stop firewalld		<span class="token comment"># 关闭</span>
systemctl disable firewalld		<span class="token comment"># 关闭开机自启</span>

<span class="token comment"># 方式2，放行80端口</span>
firewall-cmd --add-port<span class="token operator">=</span><span class="token number">80</span>/tcp <span class="token parameter variable">--permanent</span>		<span class="token comment"># 放行tcp规则下的80端口，永久生效</span>
firewall-cmd <span class="token parameter variable">--reload</span>							<span class="token comment"># 重新加载防火墙规则</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,5),w=a("p",null,"启动后浏览器输入Linux服务器的IP地址或主机名即可访问",-1),A={href:"http://192.168.88.130",target:"_blank",rel:"noopener noreferrer"},M={href:"http://centos",target:"_blank",rel:"noopener noreferrer"},O=a("p",null,"ps：80端口是访问网站的默认端口，所以后面无需跟随端口号",-1),L=a("p",null,"显示的指定端口也是可以的比如：",-1),R={href:"http://192.168.88.130:80",target:"_blank",rel:"noopener noreferrer"},D={href:"http://centos:80",target:"_blank",rel:"noopener noreferrer"},N=t('<p>至此，Nginx安装配置完成。</p><figure><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/18/20221018143113.png" alt="image-20221018143113053" tabindex="0" loading="lazy"><figcaption>image-20221018143113053</figcaption></figure><h1 id="rabbitmq安装部署【简单】" tabindex="-1"><a class="header-anchor" href="#rabbitmq安装部署【简单】" aria-hidden="true">#</a> RabbitMQ安装部署【简单】</h1><h2 id="简介-3" tabindex="-1"><a class="header-anchor" href="#简介-3" aria-hidden="true">#</a> 简介</h2><p>RabbitMQ一款知名的开源消息队列系统，为企业提供消息的发布、订阅、点对点传输等消息服务。</p><p>RabbitMQ在企业开发中十分常见，课程为大家演示快速搭建RabbitMQ环境。</p><h2 id="安装-4" tabindex="-1"><a class="header-anchor" href="#安装-4" aria-hidden="true">#</a> 安装</h2><blockquote><p>rabbitmq在yum仓库中的版本比较老，所以我们需要手动构建yum仓库</p></blockquote>',8),P=t(`<li><p>准备yum仓库</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># root执行</span>
<span class="token comment"># 1. 准备gpgkey密钥</span>
<span class="token function">rpm</span> <span class="token parameter variable">--import</span> https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc
<span class="token function">rpm</span> <span class="token parameter variable">--import</span> https://packagecloud.io/rabbitmq/erlang/gpgkey
<span class="token function">rpm</span> <span class="token parameter variable">--import</span> https://packagecloud.io/rabbitmq/rabbitmq-server/gpgkey

<span class="token comment"># 2. 准备仓库文件</span>
<span class="token function">vim</span> /etc/yum.repos.d/rabbitmq.repo
<span class="token comment"># 填入如下内容</span>
<span class="token comment">##</span>
<span class="token comment">## Zero dependency Erlang</span>
<span class="token comment">##</span>

<span class="token punctuation">[</span>rabbitmq_erlang<span class="token punctuation">]</span>
<span class="token assign-left variable">name</span><span class="token operator">=</span>rabbitmq_erlang
<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>https://packagecloud.io/rabbitmq/erlang/el/7/<span class="token variable">$basearch</span>
<span class="token assign-left variable">repo_gpgcheck</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token comment"># PackageCloud&#39;s repository key and RabbitMQ package signing key</span>
<span class="token assign-left variable">gpgkey</span><span class="token operator">=</span>https://packagecloud.io/rabbitmq/erlang/gpgkey
       https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc
<span class="token assign-left variable">sslverify</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">sslcacert</span><span class="token operator">=</span>/etc/pki/tls/certs/ca-bundle.crt
<span class="token assign-left variable">metadata_expire</span><span class="token operator">=</span><span class="token number">300</span>

<span class="token punctuation">[</span>rabbitmq_erlang-source<span class="token punctuation">]</span>
<span class="token assign-left variable">name</span><span class="token operator">=</span>rabbitmq_erlang-source
<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>https://packagecloud.io/rabbitmq/erlang/el/7/SRPMS
<span class="token assign-left variable">repo_gpgcheck</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">0</span>
<span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token comment"># PackageCloud&#39;s repository key and RabbitMQ package signing key</span>
<span class="token assign-left variable">gpgkey</span><span class="token operator">=</span>https://packagecloud.io/rabbitmq/erlang/gpgkey
       https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc
<span class="token assign-left variable">sslverify</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">sslcacert</span><span class="token operator">=</span>/etc/pki/tls/certs/ca-bundle.crt
<span class="token assign-left variable">metadata_expire</span><span class="token operator">=</span><span class="token number">300</span>

<span class="token comment">##</span>
<span class="token comment">## RabbitMQ server</span>
<span class="token comment">##</span>

<span class="token punctuation">[</span>rabbitmq_server<span class="token punctuation">]</span>
<span class="token assign-left variable">name</span><span class="token operator">=</span>rabbitmq_server
<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>https://packagecloud.io/rabbitmq/rabbitmq-server/el/7/<span class="token variable">$basearch</span>
<span class="token assign-left variable">repo_gpgcheck</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">0</span>
<span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token comment"># PackageCloud&#39;s repository key and RabbitMQ package signing key</span>
<span class="token assign-left variable">gpgkey</span><span class="token operator">=</span>https://packagecloud.io/rabbitmq/rabbitmq-server/gpgkey
       https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc
<span class="token assign-left variable">sslverify</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">sslcacert</span><span class="token operator">=</span>/etc/pki/tls/certs/ca-bundle.crt
<span class="token assign-left variable">metadata_expire</span><span class="token operator">=</span><span class="token number">300</span>

<span class="token punctuation">[</span>rabbitmq_server-source<span class="token punctuation">]</span>
<span class="token assign-left variable">name</span><span class="token operator">=</span>rabbitmq_server-source
<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>https://packagecloud.io/rabbitmq/rabbitmq-server/el/7/SRPMS
<span class="token assign-left variable">repo_gpgcheck</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">0</span>
<span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">gpgkey</span><span class="token operator">=</span>https://packagecloud.io/rabbitmq/rabbitmq-server/gpgkey
<span class="token assign-left variable">sslverify</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">sslcacert</span><span class="token operator">=</span>/etc/pki/tls/certs/ca-bundle.crt
<span class="token assign-left variable">metadata_expire</span><span class="token operator">=</span><span class="token number">300</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>安装RabbitMQ</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># root执行</span>
yum <span class="token function">install</span> erlang rabbitmq-server <span class="token parameter variable">-y</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Installed:
  erlang.x86_64 <span class="token number">0</span>:23.3.4.11-1.el7           rabbitmq-server.noarch <span class="token number">0</span>:3.10.0-1.el7
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>启动</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># root执行</span>
<span class="token comment"># 使用systemctl管控，服务名：rabbitmq-server</span>
systemctl <span class="token builtin class-name">enable</span> rabbitmq-server		<span class="token comment"># 开机自启</span>
systemctl disable rabbitmq-server		<span class="token comment"># 关闭开机自启</span>
systemctl start rabbitmq-server			<span class="token comment"># 启动</span>
systemctl stop rabbitmq-server			<span class="token comment"># 关闭</span>
systemctl status rabbitmq-server		<span class="token comment"># 查看状态</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>放行防火墙，RabbitMQ使用5672、15672、25672 3个端口</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 方式1（推荐），关闭防火墙</span>
systemctl stop firewalld		<span class="token comment"># 关闭</span>
systemctl disable firewalld		<span class="token comment"># 关闭开机自启</span>

<span class="token comment"># 方式2，放行5672 25672端口</span>
firewall-cmd --add-port<span class="token operator">=</span><span class="token number">5672</span>/tcp <span class="token parameter variable">--permanent</span>		<span class="token comment"># 放行tcp规则下的5672端口，永久生效</span>
firewall-cmd --add-port<span class="token operator">=</span><span class="token number">15672</span>/tcp <span class="token parameter variable">--permanent</span>		<span class="token comment"># 放行tcp规则下的15672端口，永久生效</span>
firewall-cmd --add-port<span class="token operator">=</span><span class="token number">25672</span>/tcp <span class="token parameter variable">--permanent</span>		<span class="token comment"># 放行tcp规则下的25672端口，永久生效</span>
firewall-cmd <span class="token parameter variable">--reload</span>								<span class="token comment"># 重新加载防火墙规则</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>启动RabbitMQ的WEB管理控制台</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>rabbitmq-plugins <span class="token builtin class-name">enable</span> rabbitmq_management
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>添加admin用户，并赋予权限</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>rabbitmqctl add_user admin <span class="token string">&#39;Itheima66^&#39;</span>
rabbitmqctl set_permissions <span class="token parameter variable">-p</span> <span class="token string">&quot;/&quot;</span> <span class="token string">&quot;admin&quot;</span> <span class="token string">&quot;.*&quot;</span> <span class="token string">&quot;.*&quot;</span> <span class="token string">&quot;.*&quot;</span>
rabbitmqctl set_user_tags admin administrator
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,6),I=a("p",null,"浏览器打开管理控制台",-1),T={href:"http://192.168.88.130:15672",target:"_blank",rel:"noopener noreferrer"},j=a("figure",null,[a("img",{src:"https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/18/20221018154824.png",alt:"image-20221018154823983",tabindex:"0",loading:"lazy"}),a("figcaption",null,"image-20221018154823983")],-1),Q=t(`<p>至此，RabbitMQ已经安装完成了。</p><h1 id="redis安装部署【简单】" tabindex="-1"><a class="header-anchor" href="#redis安装部署【简单】" aria-hidden="true">#</a> Redis安装部署【简单】</h1><h2 id="简介-4" tabindex="-1"><a class="header-anchor" href="#简介-4" aria-hidden="true">#</a> 简介</h2><p>redis是一个开源的、使用C语言编写的、支持网络交互的、可基于内存也可持久化的Key-Value数据库。</p><p>redis的特点就是：<code>快</code>，可以基于内存存储数据并提供超低延迟、超快的检索速度</p><p>一般用于在系统中提供快速缓存的能力。</p><h2 id="安装-5" tabindex="-1"><a class="header-anchor" href="#安装-5" aria-hidden="true">#</a> 安装</h2><ol><li><p>配置<code>EPEL</code>仓库</p><blockquote><p>EPEL 的全称叫 Extra Packages for Enterprise Linux 。EPEL是由 Fedora 社区打造，为 RHEL 及衍生发行版如 CentOS、Scientific Linux 等提供高质量软件包的项目。装上了 EPEL之后，就相当于添加了一个第三方源。EPEL则为服务器版本提供大量的rpm包(yum程序所使用的程序安装包，类似Windows的exe)，而且大多数rpm包在官方 repository 中是找不到的。</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># root执行</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> epel-release
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>安装redis</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># root执行</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> redis
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>启动redis</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># root执行</span>
<span class="token comment"># 使用systemctl管控，服务名：redis</span>
systemctl <span class="token builtin class-name">enable</span> redis		<span class="token comment"># 开机自启</span>
systemctl disable redis		<span class="token comment"># 关闭开机自启</span>
systemctl start redis		<span class="token comment"># 启动</span>
systemctl stop redis		<span class="token comment"># 关闭</span>
systemctl status redis		<span class="token comment"># 查看状态</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>放行防火墙，redis使用端口6379</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 方式1（推荐），关闭防火墙</span>
systemctl stop firewalld		<span class="token comment"># 关闭</span>
systemctl disable firewalld		<span class="token comment"># 关闭开机自启</span>

<span class="token comment"># 方式2，放行6379端口</span>
firewall-cmd --add-port<span class="token operator">=</span><span class="token number">6379</span>/tcp <span class="token parameter variable">--permanent</span>		<span class="token comment"># 放行tcp规则下的6379端口，永久生效</span>
firewall-cmd <span class="token parameter variable">--reload</span>	
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>进入redis服务</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 执行redis-cli</span>
<span class="token punctuation">[</span>root@centos ~<span class="token punctuation">]</span><span class="token comment"># redis-cli</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> <span class="token builtin class-name">set</span> mykey hello
OK
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> get mykey
<span class="token string">&quot;hello&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p>至此，redis安装完成。</p><h1 id="elasticsearch安装部署" tabindex="-1"><a class="header-anchor" href="#elasticsearch安装部署" aria-hidden="true">#</a> ElasticSearch安装部署</h1><h2 id="简介-5" tabindex="-1"><a class="header-anchor" href="#简介-5" aria-hidden="true">#</a> 简介</h2>`,11),K={href:"https://baike.baidu.com/item/%E5%85%A8%E6%96%87%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E",target:"_blank",rel:"noopener noreferrer"},B={href:"https://www.elastic.co/",target:"_blank",rel:"noopener noreferrer"},C=a("p",null,"它可以快速地储存、搜索和分析海量数据。维基百科、Stack Overflow、Github 都采用它。",-1),F=a("p",null,"Elasticsearch简称es，在企业内同样是一款应用非常广泛的搜索引擎服务。",-1),Z=a("p",null,"很多服务中的搜索功能，都是基于es来实现的。",-1),Y=a("h2",{id:"安装-6",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#安装-6","aria-hidden":"true"},"#"),s(" 安装")],-1),J=t(`<li><p>添加yum仓库</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># root执行</span>
<span class="token comment"># 导入仓库密钥</span>
<span class="token function">rpm</span> <span class="token parameter variable">--import</span> https://artifacts.elastic.co/GPG-KEY-elasticsearch

<span class="token comment"># 添加yum源</span>
<span class="token comment"># 编辑文件 </span>
<span class="token function">vim</span> /etc/yum.repos.d/elasticsearch.repo

<span class="token punctuation">[</span>elasticsearch-7.x<span class="token punctuation">]</span>
<span class="token assign-left variable">name</span><span class="token operator">=</span>Elasticsearch repository <span class="token keyword">for</span> <span class="token number">7</span>.x packages
<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>https://artifacts.elastic.co/packages/7.x/yum
<span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">gpgkey</span><span class="token operator">=</span>https://artifacts.elastic.co/GPG-KEY-elasticsearch
<span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">autorefresh</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">type</span><span class="token operator">=</span>rpm-md


<span class="token comment"># 更新yum缓存</span>
yum makecache
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>安装es</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> <span class="token parameter variable">-y</span> elasticsearch
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>配置es</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /etc/elasticsearch/elasticsearch.yml

<span class="token comment"># 17行，设置集群名称</span>
cluster.name: my-cluster

<span class="token comment"># 23行，设置节点名称</span>
node.name: node-1

<span class="token comment"># 56行，允许外网访问</span>
network.host: <span class="token number">0.0</span>.0.0

<span class="token comment"># 74行，配置集群master节点</span>
cluster.initial_master_nodes: <span class="token punctuation">[</span><span class="token string">&quot;node-1&quot;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>启动es</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl start <span class="token operator">|</span> stop <span class="token operator">|</span> status <span class="token operator">|</span> <span class="token builtin class-name">enable</span> <span class="token operator">|</span> disable elasticsearch
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>关闭防火墙</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl stop firewalld
systemctl disable firewalld
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li>`,5),U=a("p",null,"测试",-1),G={href:"http://ip:9200/?pretty",target:"_blank",rel:"noopener noreferrer"},W=a("figure",null,[a("img",{src:"https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/25/20221025085432.png",alt:"image-20221025085432335",tabindex:"0",loading:"lazy"}),a("figcaption",null,"image-20221025085432335")],-1),$=t(`<h1 id="集群化环境前置准备" tabindex="-1"><a class="header-anchor" href="#集群化环境前置准备" aria-hidden="true">#</a> 集群化环境前置准备</h1><h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍" aria-hidden="true">#</a> 介绍</h2><p>在前面，我们所学习安装的软件，都是以单机模式运行的。</p><p>后续，我们将要学习大数据相关的软件部署，所以后续我们所安装的软件服务，大多数都是以集群化（多台服务器共同工作）模式运行的。</p><p>所以，在当前小节，我们需要完成集群化环境的前置准备，包括创建多台虚拟机，配置主机名映射，SSH免密登录等等。</p><h2 id="部署" tabindex="-1"><a class="header-anchor" href="#部署" aria-hidden="true">#</a> 部署</h2><h3 id="配置多台linux虚拟机" tabindex="-1"><a class="header-anchor" href="#配置多台linux虚拟机" aria-hidden="true">#</a> 配置多台Linux虚拟机</h3><p>安装集群化软件，首要条件就是要有多台Linux服务器可用。</p><p>我们可以使用VMware提供的克隆功能，将我们的虚拟机额外克隆出3台来使用。</p><ol><li><p>首先，关机当前CentOS系统虚拟机（可以使用root用户执行<code>shutdown</code>来快速关机）</p></li><li><p>新建文件夹</p><figure><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/25/20221025104157.png" alt="image-20221025104157628" tabindex="0" loading="lazy"><figcaption>image-20221025104157628</figcaption></figure><p>文件夹起名为：<code>虚拟机集群</code></p></li><li><p>克隆</p><figure><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/25/20221025104131.png" alt="image-20221025104131303" tabindex="0" loading="lazy"><figcaption>image-20221025104131303</figcaption></figure><figure><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/25/20221025104312.png" alt="image-20221025104312091" tabindex="0" loading="lazy"><figcaption>image-20221025104312091</figcaption></figure><figure><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/25/20221025104329.png" alt="image-20221025104329109" tabindex="0" loading="lazy"><figcaption>image-20221025104329109</figcaption></figure><figure><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/25/20221025104345.png" alt="image-20221025104345484" tabindex="0" loading="lazy"><figcaption>image-20221025104345484</figcaption></figure><figure><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/25/20221025104414.png" alt="image-20221025104414576" tabindex="0" loading="lazy"><figcaption>image-20221025104414576</figcaption></figure><figure><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/25/20221025104427.png" alt="image-20221025104427160" tabindex="0" loading="lazy"><figcaption>image-20221025104427160</figcaption></figure><figure><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/25/20221025104432.png" alt="image-20221025104432927" tabindex="0" loading="lazy"><figcaption>image-20221025104432927</figcaption></figure><figure><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/25/20221025104446.png" alt="image-20221025104446044" tabindex="0" loading="lazy"><figcaption>image-20221025104446044</figcaption></figure></li><li><p>同样的操作克隆出：node2和node3</p><figure><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/25/20221025104825.png" alt="image-20221025104825204" tabindex="0" loading="lazy"><figcaption>image-20221025104825204</figcaption></figure></li><li><p>开启node1，修改主机名为node1，并修改固定ip为：192.168.88.131</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 修改主机名</span>
hostnamectl set-hostname node1

<span class="token comment"># 修改IP地址</span>
<span class="token function">vim</span> /etc/sysconfig/network-scripts/ifcfg-ens33
<span class="token assign-left variable">IPADDR</span><span class="token operator">=</span><span class="token string">&quot;192.168.88.131&quot;</span>

<span class="token comment"># 重启网卡</span>
systemctl stop network
systemctl start network
<span class="token comment"># 或者直接</span>
systemctl restart network
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>同样的操作启动node2和node3,</p><p>修改node2主机名为node2，设置ip为192.168.88.132</p><p>修改node2主机名为node3，设置ip为192.168.88.133</p></li><li><p>配置FinalShell，配置连接到node1、node2、node3的连接</p><blockquote><p>为了简单起见，建议配置root用户登录</p></blockquote></li></ol><h3 id="准备主机名映射" tabindex="-1"><a class="header-anchor" href="#准备主机名映射" aria-hidden="true">#</a> 准备主机名映射</h3><ol><li><p>在Windows系统中修改hosts文件，填入如下内容：</p><blockquote><p>如果同学们使用MacOS系统，请：</p><ol><li>sudo su -，切换到root</li><li>修改/etc/hosts文件</li></ol></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">192.168</span>.88.131 node1
<span class="token number">192.168</span>.88.132 node2
<span class="token number">192.168</span>.88.133 node3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>在3台Linux的/etc/hosts文件中，填入如下内容（<mark>3台都要添加</mark>）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">192.168</span>.88.131 node1
<span class="token number">192.168</span>.88.132 node2
<span class="token number">192.168</span>.88.133 node3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="配置ssh免密登录" tabindex="-1"><a class="header-anchor" href="#配置ssh免密登录" aria-hidden="true">#</a> 配置SSH免密登录</h3><h4 id="简介-6" tabindex="-1"><a class="header-anchor" href="#简介-6" aria-hidden="true">#</a> 简介</h4><p>SSH服务是一种用于远程登录的安全认证协议。</p><p>我们通过FinalShell远程连接到Linux，就是使用的SSH服务。</p><p>SSH服务支持：</p><ol><li>通过账户+密码的认证方式来做用户认证</li><li>通过账户+秘钥文件的方式做用户认证</li></ol><p>SSH可以让我们通过SSH命令，远程的登陆到其它的主机上，比如：</p><p>在node1执行：ssh root@node2，将以root用户登录node2服务器，输入密码即可成功登陆</p><p>或者ssh node2，将以当前用户直接登陆到node2服务器。</p><h4 id="ssh免密配置" tabindex="-1"><a class="header-anchor" href="#ssh免密配置" aria-hidden="true">#</a> SSH免密配置</h4><p>后续安装的集群化软件，多数需要远程登录以及远程执行命令，我们可以简单起见，配置三台Linux服务器之间的免密码互相SSH登陆</p><ol><li><p>在每一台机器都执行：<code>ssh-keygen -t rsa -b 4096</code>，一路回车到底即可</p></li><li><p>在每一台机器都执行：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ssh-copy-id node1
ssh-copy-id node2
ssh-copy-id node3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行完毕后，node1、node2、node3之间将完成root用户之间的免密互通</p></li></ol><h3 id="配置jdk环境" tabindex="-1"><a class="header-anchor" href="#配置jdk环境" aria-hidden="true">#</a> 配置JDK环境</h3><p>后续的大数据集群软件，多数是需要Java运行环境的，所以我们为<mark>每一台</mark>机器都配置JDK环境。</p><p>JDK配置参阅：<code>Tomcat</code>安装部署环节。</p><h3 id="关闭防火墙和selinux" tabindex="-1"><a class="header-anchor" href="#关闭防火墙和selinux" aria-hidden="true">#</a> 关闭防火墙和SELinux</h3><p>集群化软件之间需要通过端口互相通讯，为了避免出现网络不通的问题，我们可以简单的在集群内部关闭防火墙。</p><p><mark>在每一台机器都执行</mark></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl stop firewalld
systemctl disable firewalld
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Linux有一个安全模块：SELinux，用以限制用户和程序的相关权限，来确保系统的安全稳定。</p><p>SELinux的配置同防火墙一样，非常复杂，课程中不多涉及，后续视情况可以出一章SELinux的配置课程。</p><p>在当前，我们只需要关闭SELinux功能，避免导致后面的软件运行出现问题即可，</p><p><mark>在每一台机器都执行</mark></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /etc/sysconfig/selinux

<span class="token comment"># 将第七行，SELINUX=enforcing 改为</span>
<span class="token assign-left variable">SELINUX</span><span class="token operator">=</span>disabled
<span class="token comment"># 保存退出后，重启虚拟机即可，千万要注意disabled单词不要写错，不然无法启动系统</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="添加快照" tabindex="-1"><a class="header-anchor" href="#添加快照" aria-hidden="true">#</a> 添加快照</h3><p>为了避免后续出现问题，在完成上述设置后，为<mark>每一台虚拟机</mark>都制作快照，留待使用。</p><h2 id="补充命令-scp" tabindex="-1"><a class="header-anchor" href="#补充命令-scp" aria-hidden="true">#</a> 补充命令 - scp</h2><p>后续的安装部署操作，我们将会频繁的在多台服务器之间相互传输数据。</p><p>为了更加方面的互相传输，我们补充一个命令：scp</p><p>scp命令是cp命令的升级版，即：ssh cp，通过SSH协议完成文件的复制。</p><p>其主要的功能就是：在不同的Linux服务器之间，通过<code>SSH</code>协议互相传输文件。</p><p>只要知晓服务器的账户和密码（或密钥），即可通过SCP互传文件。</p><p>语法：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">scp</span> <span class="token punctuation">[</span>-r<span class="token punctuation">]</span> 参数1 参数2
- -r选项用于复制文件夹使用，如果复制文件夹，必须使用-r
- 参数1：本机路径 或 远程目标路径
- 参数2：远程目标路径 或 本机路径

如：
<span class="token function">scp</span> <span class="token parameter variable">-r</span> /export/server/jdk root@node2:/export/server/
将本机上的jdk文件夹， 以root的身份复制到node2的/export/server/内
同SSH登陆一样，账户名可以省略（使用本机当前的同名账户登陆）

如：
<span class="token function">scp</span> <span class="token parameter variable">-r</span> node2:/export/server/jdk /export/server/
将远程node2的jdk文件夹，复制到本机的/export/server/内


<span class="token comment"># scp命令的高级用法</span>
<span class="token builtin class-name">cd</span> /export/server
<span class="token function">scp</span> <span class="token parameter variable">-r</span> jdk node2:<span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">pwd</span><span class="token variable">\`</span></span>/    <span class="token comment"># 将本机当前路径的jdk文件夹，复制到node2服务器的同名路径下</span>
<span class="token function">scp</span> <span class="token parameter variable">-r</span> jdk node2:<span class="token environment constant">$PWD</span>      <span class="token comment"># 将本机当前路径的jdk文件夹，复制到node2服务器的同名路径下</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="zookeeper集群安装部署" tabindex="-1"><a class="header-anchor" href="#zookeeper集群安装部署" aria-hidden="true">#</a> Zookeeper集群安装部署</h1><h2 id="简介-7" tabindex="-1"><a class="header-anchor" href="#简介-7" aria-hidden="true">#</a> 简介</h2>`,48),V={href:"https://baike.baidu.com/item/%E5%88%86%E5%B8%83%E5%BC%8F/19276232?fromModule=lemma_inlink",target:"_blank",rel:"noopener noreferrer"},X={href:"https://baike.baidu.com/item/%E5%88%86%E5%B8%83%E5%BC%8F%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/9854429?fromModule=lemma_inlink",target:"_blank",rel:"noopener noreferrer"},aa={href:"https://baike.baidu.com/item/Hbase/7670213?fromModule=lemma_inlink",target:"_blank",rel:"noopener noreferrer"},sa=a("strong",null,"一致性",-1),na=t(`<p>除了为Hadoop和HBase提供协调服务外，Zookeeper也被其它许多软件采用作为其分布式状态一致性的依赖，比如Kafka，又或者一些软件项目中，也经常能见到Zookeeper作为一致性协调服务存在。</p><p>Zookeeper不论是大数据领域亦或是其它服务器开发领域，涉及到分布式状态一致性的场景，总有它的身影存在。</p><h2 id="安装-7" tabindex="-1"><a class="header-anchor" href="#安装-7" aria-hidden="true">#</a> 安装</h2><p>Zookeeper是一款分布式的集群化软件，<strong>可以在多台服务器上部署，并协同组成分布式集群一起工作。</strong></p><ol><li><p>首先，要确保已经完成了<code>集群化环境前置准备</code>环节的全部内容</p></li><li><p>【node1上操作】下载Zookeeper安装包，并解压</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 下载</span>
<span class="token function">wget</span> http://archive.apache.org/dist/zookeeper/zookeeper-3.5.9/apache-zookeeper-3.5.9-bin.tar.gz

<span class="token comment"># 确保如下目录存在，不存在就创建</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /export/server

<span class="token comment"># 解压</span>
<span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> apache-zookeeper-3.5.9-bin.tar.gz <span class="token parameter variable">-C</span> /export/server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>【node1上操作】创建软链接</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ln</span> <span class="token parameter variable">-s</span> /export/server/apache-zookeeper-3.5.9 /export/server/zookeeper
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>【node1上操作】修改配置文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /export/server/zookeeper/conf/zoo.cfg

<span class="token assign-left variable">tickTime</span><span class="token operator">=</span><span class="token number">2000</span>
<span class="token comment"># zookeeper数据存储目录</span>
<span class="token assign-left variable">dataDir</span><span class="token operator">=</span>/export/server/zookeeper/data
<span class="token assign-left variable">clientPort</span><span class="token operator">=</span><span class="token number">2181</span>
<span class="token assign-left variable">initLimit</span><span class="token operator">=</span><span class="token number">5</span>
<span class="token assign-left variable">syncLimit</span><span class="token operator">=</span><span class="token number">2</span>
<span class="token assign-left variable">server.1</span><span class="token operator">=</span>node1:2888:3888
<span class="token assign-left variable">server.2</span><span class="token operator">=</span>node2:2888:3888
<span class="token assign-left variable">server.3</span><span class="token operator">=</span>node3:2888:3888
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>【node1上操作】配置<code>myid</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 1. 创建Zookeeper的数据目录</span>
<span class="token function">mkdir</span> /export/server/zookeeper/data

<span class="token comment"># 2. 创建文件，并填入1</span>
<span class="token function">vim</span> /export/server/zookeeper/data/myid
<span class="token comment"># 在文件内填入1即可</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>【在node2和node3上操作】，创建文件夹</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /export/server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>【node1上操作】将Zookeeper 复制到node2和node3</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /export/server

<span class="token function">scp</span> <span class="token parameter variable">-r</span> apache-zookeeper-3.5.9 node2:<span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">pwd</span><span class="token variable">\`</span></span>/
<span class="token function">scp</span> <span class="token parameter variable">-r</span> apache-zookeeper-3.5.9 node3:<span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">pwd</span><span class="token variable">\`</span></span>/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>【在node2上操作】</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 1. 创建软链接</span>
<span class="token function">ln</span> <span class="token parameter variable">-s</span> /export/server/apache-zookeeper-3.5.9 /export/server/zookeeper

<span class="token comment"># 2. 修改myid文件</span>
<span class="token function">vim</span> /export/server/zookeeper/data/myid
<span class="token comment"># 修改内容为2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>【在node3上操作】</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 1. 创建软链接</span>
<span class="token function">ln</span> <span class="token parameter variable">-s</span> /export/server/apache-zookeeper-3.5.9 /export/server/zookeeper

<span class="token comment"># 2. 修改myid文件</span>
<span class="token function">vim</span> /export/server/zookeeper/data/myid
<span class="token comment"># 修改内容为3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>【在node1、node2、node3上分别执行】启动Zookeeper</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 启动命令</span>
/export/server/zookeeper/bin/zkServer.sh start		<span class="token comment"># 启动Zookeeper</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>【在node1、node2、node3上分别执行】检查Zookeeper进程是否启动</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>jps

<span class="token comment"># 结果中找到有：QuorumPeerMain 进程即可</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>【node1上操作】验证Zookeeper</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/export/server/zookeeper/zkCli.sh

<span class="token comment"># 进入到Zookeeper控制台中后，执行</span>
<span class="token function">ls</span> /

<span class="token comment"># 如无报错即配置成功</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p>至此Zookeeper安装完成</p><h1 id="kafka集群安装部署" tabindex="-1"><a class="header-anchor" href="#kafka集群安装部署" aria-hidden="true">#</a> Kafka集群安装部署</h1><h2 id="简介-8" tabindex="-1"><a class="header-anchor" href="#简介-8" aria-hidden="true">#</a> 简介</h2><p>Kafka是一款<code>分布式的、去中心化的、高吞吐低延迟、订阅模式</code>的<strong>消息队列系统</strong>。</p><p>同RabbitMQ一样，Kafka也是消息队列。不过RabbitMQ多用于后端系统，因其更加专注于消息的延迟和容错。</p><p>Kafka多用于大数据体系，因其更加专注于数据的吞吐能力。</p><p>Kafka多数都是运行在分布式（集群化）模式下，所以课程将以3台服务器，来完成Kafka集群的安装部署。</p><h2 id="安装-8" tabindex="-1"><a class="header-anchor" href="#安装-8" aria-hidden="true">#</a> 安装</h2><ol><li><p>确保已经跟随前面的，安装并部署了JDK和Zookeeper服务</p><blockquote><p>Kafka的运行依赖JDK环境和Zookeeper请确保已经有了JDK环境和Zookeeper</p></blockquote></li><li><p>【在node1操作】下载并上传Kafka的安装包</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 下载安装包</span>
<span class="token function">wget</span> http://archive.apache.org/dist/kafka/2.4.1/kafka_2.12-2.4.1.tgz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>【在node1操作】解压</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /export/server			<span class="token comment"># 此文件夹如果不存在需先创建</span>

<span class="token comment"># 解压</span>
<span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> kafka_2.12-2.4.1.tgz <span class="token parameter variable">-C</span> /export/server/

<span class="token comment"># 创建软链接</span>
<span class="token function">ln</span> <span class="token parameter variable">-s</span> /export/server/kafka_2.12-2.4.1 /export/server/kafka
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>【在node1操作】修改Kafka目录内的config目录内的<code>server.properties</code>文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /export/server/kafka/config
<span class="token comment"># 指定broker的id</span>
<span class="token assign-left variable">broker.id</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token comment"># 指定 kafka的绑定监听的地址</span>
<span class="token assign-left variable">listeners</span><span class="token operator">=</span>PLAINTEXT://node1:9092
<span class="token comment"># 指定Kafka数据的位置</span>
<span class="token assign-left variable">log.dirs</span><span class="token operator">=</span>/export/server/kafka/data
<span class="token comment"># 指定Zookeeper的三个节点</span>
<span class="token assign-left variable">zookeeper.connect</span><span class="token operator">=</span>node1:2181,node2:2181,node3:2181
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>【在node1操作】将node1的kafka复制到node2和node3</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /export/server

<span class="token comment"># 复制到node2同名文件夹</span>
<span class="token function">scp</span> <span class="token parameter variable">-r</span> kafka_2.12-2.4.1 node2:<span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">pwd</span><span class="token variable">\`</span></span>/
<span class="token comment"># 复制到node3同名文件夹</span>
<span class="token function">scp</span> <span class="token parameter variable">-r</span> kafka_2.12-2.4.1 node3:<span class="token environment constant">$PWD</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>【在node2操作】</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 创建软链接</span>
<span class="token function">ln</span> <span class="token parameter variable">-s</span> /export/server/kafka_2.12-2.4.1 /export/server/kafka

<span class="token builtin class-name">cd</span> /export/server/kafka/config
<span class="token comment"># 指定broker的id</span>
<span class="token assign-left variable">broker.id</span><span class="token operator">=</span><span class="token number">2</span>
<span class="token comment"># 指定 kafka的绑定监听的地址</span>
<span class="token assign-left variable">listeners</span><span class="token operator">=</span>PLAINTEXT://node2:9092
<span class="token comment"># 指定Kafka数据的位置</span>
<span class="token assign-left variable">log.dirs</span><span class="token operator">=</span>/export/server/kafka/data
<span class="token comment"># 指定Zookeeper的三个节点</span>
<span class="token assign-left variable">zookeeper.connect</span><span class="token operator">=</span>node1:2181,node2:2181,node3:2181
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>【在node3操作】</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 创建软链接</span>
<span class="token function">ln</span> <span class="token parameter variable">-s</span> /export/server/kafka_2.12-2.4.1 /export/server/kafka

<span class="token builtin class-name">cd</span> /export/server/kafka/config
<span class="token comment"># 指定broker的id</span>
<span class="token assign-left variable">broker.id</span><span class="token operator">=</span><span class="token number">3</span>
<span class="token comment"># 指定 kafka的绑定监听的地址</span>
<span class="token assign-left variable">listeners</span><span class="token operator">=</span>PLAINTEXT://node3:9092
<span class="token comment"># 指定Kafka数据的位置</span>
<span class="token assign-left variable">log.dirs</span><span class="token operator">=</span>/export/server/kafka/data
<span class="token comment"># 指定Zookeeper的三个节点</span>
<span class="token assign-left variable">zookeeper.connect</span><span class="token operator">=</span>node1:2181,node2:2181,node3:2181
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>启动kafka</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 请先确保Zookeeper已经启动了</span>

<span class="token comment"># 方式1：【前台启动】分别在node1、2、3上执行如下语句</span>
/export/server/kafka/bin/kafka-server-start.sh /export/server/kafka/config/server.properties

<span class="token comment"># 方式2：【后台启动】分别在node1、2、3上执行如下语句</span>
<span class="token function">nohup</span> /export/server/kafka/bin/kafka-server-start.sh /export/server/kafka/config/server.properties <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&gt;&gt;</span> /export/server/kafka/kafka-server.log <span class="token operator">&amp;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>验证Kafka启动</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 在每一台服务器执行</span>
jps
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/25/20221025174522.png" alt="image-20221025174522487" tabindex="0" loading="lazy"><figcaption>image-20221025174522487</figcaption></figure></li></ol><h2 id="测试kafka能否正常使用" tabindex="-1"><a class="header-anchor" href="#测试kafka能否正常使用" aria-hidden="true">#</a> 测试Kafka能否正常使用</h2><ol><li>创建测试主题</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 在node1执行，创建一个主题</span>
/export/server/kafka_2.12-2.4.1/bin/kafka-topics.sh <span class="token parameter variable">--create</span> <span class="token parameter variable">--zookeeper</span> node1:2181 --replication-factor <span class="token number">1</span> <span class="token parameter variable">--partitions</span> <span class="token number">3</span> <span class="token parameter variable">--topic</span> <span class="token builtin class-name">test</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>运行测试，请在FinalShell中打开2个node1的终端页面</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 打开一个终端页面，启动一个模拟的数据生产者</span>
/export/server/kafka_2.12-2.4.1/bin/kafka-console-producer.sh --broker-list node1:9092 <span class="token parameter variable">--topic</span> <span class="token builtin class-name">test</span>
<span class="token comment"># 再打开一个新的终端页面，在启动一个模拟的数据消费者</span>
/export/server/kafka_2.12-2.4.1/bin/kafka-console-consumer.sh --bootstrap-server node1:9092 <span class="token parameter variable">--topic</span> <span class="token builtin class-name">test</span> --from-beginning
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="大数据集群-hadoop生态-安装部署" tabindex="-1"><a class="header-anchor" href="#大数据集群-hadoop生态-安装部署" aria-hidden="true">#</a> 大数据集群（Hadoop生态）安装部署</h1><h2 id="简介-9" tabindex="-1"><a class="header-anchor" href="#简介-9" aria-hidden="true">#</a> 简介</h2><p>1）Hadoop是一个由Apache基金会所开发的分布式系统基础架构。<br> 2）主要解决，海量数据的存储和海量数据的分析计算问题。</p><p>Hadoop HDFS 提供分布式海量数据存储能力</p><p>Hadoop YARN 提供分布式集群资源管理能力</p><p>Hadoop MapReduce 提供分布式海量数据计算能力</p><h3 id="前置要求" tabindex="-1"><a class="header-anchor" href="#前置要求" aria-hidden="true">#</a> 前置要求</h3><ul><li>请确保完成了集群化环境前置准备章节的内容</li><li>即：JDK、SSH免密、关闭防火墙、配置主机名映射等前置操作</li></ul><h3 id="hadoop集群角色" tabindex="-1"><a class="header-anchor" href="#hadoop集群角色" aria-hidden="true">#</a> Hadoop集群角色</h3><p>Hadoop生态体系中总共会出现如下进程角色：</p><ol><li>Hadoop HDFS的管理角色：Namenode进程（<code>仅需1个即可（管理者一个就够）</code>）</li><li>Hadoop HDFS的工作角色：Datanode进程（<code>需要多个（工人，越多越好，一个机器启动一个）</code>）</li><li>Hadoop YARN的管理角色：ResourceManager进程（<code>仅需1个即可（管理者一个就够）</code>）</li><li>Hadoop YARN的工作角色：NodeManager进程（<code>需要多个（工人，越多越好，一个机器启动一个）</code>）</li><li>Hadoop 历史记录服务器角色：HistoryServer进程（<code>仅需1个即可（功能进程无需太多1个足够）</code>）</li><li>Hadoop 代理服务器角色：WebProxyServer进程（<code>仅需1个即可（功能进程无需太多1个足够）</code>）</li><li>Zookeeper的进程：QuorumPeerMain进程（<code>仅需1个即可（Zookeeper的工作者，越多越好）</code>）</li></ol><h3 id="角色和节点分配" tabindex="-1"><a class="header-anchor" href="#角色和节点分配" aria-hidden="true">#</a> 角色和节点分配</h3><p>角色分配如下：</p><ol><li>node1:Namenode、Datanode、ResourceManager、NodeManager、HistoryServer、WebProxyServer、QuorumPeerMain</li><li>node2:Datanode、NodeManager、QuorumPeerMain</li><li>node3:Datanode、NodeManager、QuorumPeerMain</li></ol><figure><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/26/20221026202935.png" alt="image-20221026202935745" tabindex="0" loading="lazy"><figcaption>image-20221026202935745</figcaption></figure><h2 id="安装-9" tabindex="-1"><a class="header-anchor" href="#安装-9" aria-hidden="true">#</a> 安装</h2><h3 id="调整虚拟机内存" tabindex="-1"><a class="header-anchor" href="#调整虚拟机内存" aria-hidden="true">#</a> 调整虚拟机内存</h3><p>如上图，可以看出node1承载了太多的压力。同时node2和node3也同时运行了不少程序</p><p>为了确保集群的稳定，需要对虚拟机进行内存设置。</p><p>请在VMware中，对：</p><ol><li>node1设置4GB或以上内存</li><li>node2和node3设置2GB或以上内存</li></ol><blockquote><p>大数据的软件本身就是集群化（一堆服务器）一起运行的。</p><p>现在我们在一台电脑中以多台虚拟机来模拟集群，确实会有很大的内存压力哦。</p></blockquote><h3 id="zookeeper集群部署" tabindex="-1"><a class="header-anchor" href="#zookeeper集群部署" aria-hidden="true">#</a> Zookeeper集群部署</h3><p>略</p><h3 id="hadoop集群部署" tabindex="-1"><a class="header-anchor" href="#hadoop集群部署" aria-hidden="true">#</a> Hadoop集群部署</h3><ol><li><p>下载Hadoop安装包、解压、配置软链接</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 1. 下载</span>
<span class="token function">wget</span> http://archive.apache.org/dist/hadoop/common/hadoop-3.3.0/hadoop-3.3.0.tar.gz

<span class="token comment"># 2. 解压</span>
<span class="token comment"># 请确保目录/export/server存在</span>
<span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> hadoop-3.3.0.tar.gz <span class="token parameter variable">-C</span> /export/server/

<span class="token comment"># 3. 构建软链接</span>
<span class="token function">ln</span> <span class="token parameter variable">-s</span> /export/server/hadoop-3.3.0 /export/server/hadoop
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>修改配置文件：<code>hadoop-env.sh</code></p><blockquote><p>Hadoop的配置文件要修改的地方很多，请细心</p></blockquote><p>cd 进入到/export/server/hadoop/etc/hadoop，文件夹中，配置文件都在这里</p><p>修改hadoop-env.sh文件</p><blockquote><p>此文件是配置一些Hadoop用到的环境变量</p><p>这些是临时变量，在Hadoop运行时有用</p><p>如果要永久生效，需要写到/etc/profile中</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 在文件开头加入：</span>
<span class="token comment"># 配置Java安装路径</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/export/server/jdk
<span class="token comment"># 配置Hadoop安装路径</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">HADOOP_HOME</span><span class="token operator">=</span>/export/server/hadoop
<span class="token comment"># Hadoop hdfs配置文件路径</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">HADOOP_CONF_DIR</span><span class="token operator">=</span><span class="token variable">$HADOOP_HOME</span>/etc/hadoop
<span class="token comment"># Hadoop YARN配置文件路径</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">YARN_CONF_DIR</span><span class="token operator">=</span><span class="token variable">$HADOOP_HOME</span>/etc/hadoop
<span class="token comment"># Hadoop YARN 日志文件夹</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">YARN_LOG_DIR</span><span class="token operator">=</span><span class="token variable">$HADOOP_HOME</span>/logs/yarn
<span class="token comment"># Hadoop hdfs 日志文件夹</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">HADOOP_LOG_DIR</span><span class="token operator">=</span><span class="token variable">$HADOOP_HOME</span>/logs/hdfs

<span class="token comment"># Hadoop的使用启动用户配置</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">HDFS_NAMENODE_USER</span><span class="token operator">=</span>root
<span class="token builtin class-name">export</span> <span class="token assign-left variable">HDFS_DATANODE_USER</span><span class="token operator">=</span>root
<span class="token builtin class-name">export</span> <span class="token assign-left variable">HDFS_SECONDARYNAMENODE_USER</span><span class="token operator">=</span>root
<span class="token builtin class-name">export</span> <span class="token assign-left variable">YARN_RESOURCEMANAGER_USER</span><span class="token operator">=</span>root
<span class="token builtin class-name">export</span> <span class="token assign-left variable">YARN_NODEMANAGER_USER</span><span class="token operator">=</span>root
<span class="token builtin class-name">export</span> <span class="token assign-left variable">YARN_PROXYSERVER_USER</span><span class="token operator">=</span>root
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>修改配置文件：<code>core-site.xml</code></p><p>如下，清空文件，填入如下内容</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token prolog">&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;configuration.xsl&quot;?&gt;</span>
<span class="token comment">&lt;!--
  Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License. See accompanying LICENSE file.
--&gt;</span>

<span class="token comment">&lt;!-- Put site-specific property overrides in this file. --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>fs.defaultFS<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>hdfs://node1:8020<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>io.file.buffer.size<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>131072<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>配置：<code>hdfs-site.xml</code>文件</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token prolog">&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;configuration.xsl&quot;?&gt;</span>
<span class="token comment">&lt;!--
  Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License. See accompanying LICENSE file.
--&gt;</span>

<span class="token comment">&lt;!-- Put site-specific property overrides in this file. --&gt;</span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>dfs.datanode.data.dir.perm<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>700<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>dfs.namenode.name.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>/data/nn<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>Path on the local filesystem where the NameNode stores the namespace and transactions logs persistently.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>dfs.namenode.hosts<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>node1,node2,node3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>List of permitted DataNodes.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>dfs.blocksize<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>268435456<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>


  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>dfs.namenode.handler.count<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>100<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>dfs.datanode.data.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>/data/dn<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>配置：<code>mapred-env.sh</code>文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 在文件的开头加入如下环境变量设置</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/export/server/jdk
<span class="token builtin class-name">export</span> <span class="token assign-left variable">HADOOP_JOB_HISTORYSERVER_HEAPSIZE</span><span class="token operator">=</span><span class="token number">1000</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">HADOOP_MAPRED_ROOT_LOGGER</span><span class="token operator">=</span>INFO,RFA
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>配置：<code>mapred-site.xml</code>文件</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot;?&gt;</span>
<span class="token prolog">&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;configuration.xsl&quot;?&gt;</span>
<span class="token comment">&lt;!--
  Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License. See accompanying LICENSE file.
--&gt;</span>

<span class="token comment">&lt;!-- Put site-specific property overrides in this file. --&gt;</span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>mapreduce.framework.name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>yarn<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>mapreduce.jobhistory.address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>node1:10020<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>


  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>mapreduce.jobhistory.webapp.address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>node1:19888<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>


  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>mapreduce.jobhistory.intermediate-done-dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>/data/mr-history/tmp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>


  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>mapreduce.jobhistory.done-dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>/data/mr-history/done<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>yarn.app.mapreduce.am.env<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>HADOOP_MAPRED_HOME=$HADOOP_HOME<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>mapreduce.map.env<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>HADOOP_MAPRED_HOME=$HADOOP_HOME<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>mapreduce.reduce.env<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>HADOOP_MAPRED_HOME=$HADOOP_HOME<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>配置：<code>yarn-env.sh</code>文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 在文件的开头加入如下环境变量设置</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/export/server/jdk
<span class="token builtin class-name">export</span> <span class="token assign-left variable">HADOOP_HOME</span><span class="token operator">=</span>/export/server/hadoop
<span class="token builtin class-name">export</span> <span class="token assign-left variable">HADOOP_CONF_DIR</span><span class="token operator">=</span><span class="token variable">$HADOOP_HOME</span>/etc/hadoop
<span class="token builtin class-name">export</span> <span class="token assign-left variable">YARN_CONF_DIR</span><span class="token operator">=</span><span class="token variable">$HADOOP_HOME</span>/etc/hadoop
<span class="token builtin class-name">export</span> <span class="token assign-left variable">YARN_LOG_DIR</span><span class="token operator">=</span><span class="token variable">$HADOOP_HOME</span>/logs/yarn
<span class="token builtin class-name">export</span> <span class="token assign-left variable">HADOOP_LOG_DIR</span><span class="token operator">=</span><span class="token variable">$HADOOP_HOME</span>/logs/hdfs
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>配置：<code>yarn-site.xml</code>文件</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot;?&gt;</span>
<span class="token comment">&lt;!--
  Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License. See accompanying LICENSE file.
--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- Site specific YARN configuration properties --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>yarn.log.server.url<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>http://node1:19888/jobhistory/logs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>yarn.web-proxy.address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>node1:8089<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>proxy server hostname and port<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>


  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>yarn.log-aggregation-enable<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>Configuration to enable or disable log aggregation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>yarn.nodemanager.remote-app-log-dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>/tmp/logs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>Configuration to enable or disable log aggregation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>


<span class="token comment">&lt;!-- Site specific YARN configuration properties --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>yarn.resourcemanager.hostname<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>node1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>yarn.resourcemanager.scheduler.class<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>yarn.nodemanager.local-dirs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>/data/nm-local<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>Comma-separated list of paths on the local filesystem where intermediate data is written.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>


  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>yarn.nodemanager.log-dirs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>/data/nm-log<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>Comma-separated list of paths on the local filesystem where logs are written.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>


  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>yarn.nodemanager.log.retain-seconds<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>10800<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>Default time (in seconds) to retain log files on the NodeManager Only applicable if log-aggregation is disabled.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>



  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>yarn.nodemanager.aux-services<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>mapreduce_shuffle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>Shuffle service that needs to be set for Map Reduce applications.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>修改workers文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 全部内容如下</span>
node1
node2
node3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>分发hadoop到其它机器</p></li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 在node1执行</span>
<span class="token builtin class-name">cd</span> /export/server

<span class="token function">scp</span> <span class="token parameter variable">-r</span> hadoop-3.3.0 node2:<span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">pwd</span><span class="token variable">\`</span></span>/
<span class="token function">scp</span> <span class="token parameter variable">-r</span> hadoop-3.3.0 node2:<span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">pwd</span><span class="token variable">\`</span></span>/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="11"><li><p>在node2、node3执行</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 创建软链接</span>
<span class="token function">ln</span> <span class="token parameter variable">-s</span> /export/server/hadoop-3.3.0 /export/server/hadoop
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>创建所需目录</p><ul><li><p>在node1执行：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /data/nn
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /data/dn
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /data/nm-log
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /data/nm-local
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>在node2执行：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /data/dn
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /data/nm-log
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /data/nm-local
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>在node3执行：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /data/dn
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /data/nm-log
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /data/nm-local
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>配置环境变量</p><p>在node1、node2、node3修改/etc/profile</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">HADOOP_HOME</span><span class="token operator">=</span>/export/server/hadoop
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$HADOOP_HOME</span>/bin:<span class="token variable">$HADOOP_HOME</span>/sbin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>执行<code>source /etc/profile</code>生效</p></li><li><p>格式化NameNode，在node1执行</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>hadoop namenode <span class="token parameter variable">-format</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>hadoop这个命令来自于：$HADOOP_HOME/bin中的程序</p><p>由于配置了环境变量PATH，所以可以在任意位置执行hadoop命令哦</p></blockquote></li><li><p>启动hadoop的hdfs集群，在node1执行即可</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>start-dfs.sh

<span class="token comment"># 如需停止可以执行</span>
stop-dfs.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>start-dfs.sh这个命令来自于：$HADOOP_HOME/sbin中的程序</p><p>由于配置了环境变量PATH，所以可以在任意位置执行start-dfs.sh命令哦</p></blockquote></li><li><p>启动hadoop的yarn集群，在node1执行即可</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>start-yarn.sh

<span class="token comment"># 如需停止可以执行</span>
stop-yarn.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>启动历史服务器</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mapred <span class="token parameter variable">--daemon</span> start historyserver

<span class="token comment"># 如需停止将start更换为stop</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>启动web代理服务器</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yarn-daemon.sh start proxyserver

<span class="token comment"># 如需停止将start更换为stop</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h4 id="验证hadoop集群运行情况" tabindex="-1"><a class="header-anchor" href="#验证hadoop集群运行情况" aria-hidden="true">#</a> 验证Hadoop集群运行情况</h4>`,48),ea=a("li",null,[a("p",null,"在node1、node2、node3上通过jps验证进程是否都启动成功")],-1),ta={href:"http://node1:9870",target:"_blank",rel:"noopener noreferrer"},ia=t(`<p>创建文件test.txt，随意填入内容，并执行：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>hadoop fs <span class="token parameter variable">-put</span> test.txt /test.txt

hadoop fs <span class="token parameter variable">-cat</span> /test.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),la={href:"http://node1:8088",target:"_blank",rel:"noopener noreferrer"},pa=t(`<p>执行：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 创建文件words.txt，填入如下内容</span>
itheima itcast hadoop
itheima hadoop hadoop
itheima itcast

<span class="token comment"># 将文件上传到HDFS中</span>
hadoop fs <span class="token parameter variable">-put</span> words.txt /words.txt

<span class="token comment"># 执行如下命令验证YARN是否正常</span>
hadoop jar /export/server/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.0.jar wordcount <span class="token parameter variable">-Dmapred.job.queue.name</span><span class="token operator">=</span>root.root /words.txt /output
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),oa=a("h1",{id:"大数据nosql数据库hbase集群部署",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#大数据nosql数据库hbase集群部署","aria-hidden":"true"},"#"),s(" 大数据NoSQL数据库HBase集群部署")],-1),ca=a("h2",{id:"简介-10",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#简介-10","aria-hidden":"true"},"#"),s(" 简介")],-1),ra={href:"https://so.csdn.net/so/search?q=%E5%88%86%E5%B8%83%E5%BC%8F&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"},da=a("p",null,"和Redis一样，HBase是一款KeyValue型存储的数据库。",-1),ua=a("p",null,"不过和Redis设计方向不同",-1),va=a("ul",null,[a("li",null,"Redis设计为少量数据，超快检索"),a("li",null,"HBase设计为海量数据，快速检索")],-1),ma=a("p",null,"HBase在大数据领域应用十分广泛，现在我们来在node1、node2、node3上部署HBase集群。",-1),ba=a("h2",{id:"安装-10",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#安装-10","aria-hidden":"true"},"#"),s(" 安装")],-1),ka=t(`<li><p>HBase依赖Zookeeper、JDK、Hadoop（HDFS），请确保已经完成前面</p><ul><li>集群化软件前置准备（JDK）</li><li>Zookeeper</li><li>Hadoop</li><li>这些环节的软件安装</li></ul></li><li><p>【node1执行】下载HBase安装包</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 下载</span>
<span class="token function">wget</span> http://archive.apache.org/dist/hbase/2.1.0/hbase-2.1.0-bin.tar.gz

<span class="token comment"># 解压</span>
<span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> hbase-2.1.0-bin.tar.gz <span class="token parameter variable">-C</span> /export/server

<span class="token comment"># 配置软链接</span>
<span class="token function">ln</span> <span class="token parameter variable">-s</span> /export/server/hbase-2.1.0 /export/server/hbase
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>【node1执行】，修改配置文件，修改<code>conf/hbase-env.sh</code>文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 在28行配置JAVA_HOME</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/export/server/jdk
<span class="token comment"># 在126行配置：</span>
<span class="token comment"># 意思表示，不使用HBase自带的Zookeeper，而是用独立Zookeeper</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">HBASE_MANAGES_ZK</span><span class="token operator">=</span>false
<span class="token comment"># 在任意行，比如26行，添加如下内容：</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">HBASE_DISABLE_HADOOP_CLASSPATH_LOOKUP</span><span class="token operator">=</span><span class="token string">&quot;true&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>【node1执行】，修改配置文件，修改<code>conf/hbase-site.xml</code>文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 将文件的全部内容替换成如下内容：</span>
<span class="token operator">&lt;</span>configuration<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">!</span>-- HBase数据在HDFS中的存放的路径 --<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>property<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>name<span class="token operator">&gt;</span>hbase.rootdir<span class="token operator">&lt;</span>/name<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>value<span class="token operator">&gt;</span>hdfs://node1:8020/hbase<span class="token operator">&lt;</span>/value<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>/property<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">!</span>-- Hbase的运行模式。false是单机模式，true是分布式模式。若为false,Hbase和Zookeeper会运行在同一个JVM里面 --<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>property<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>name<span class="token operator">&gt;</span>hbase.cluster.distributed<span class="token operator">&lt;</span>/name<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>value<span class="token operator">&gt;</span>true<span class="token operator">&lt;</span>/value<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>/property<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">!</span>-- ZooKeeper的地址 --<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>property<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>name<span class="token operator">&gt;</span>hbase.zookeeper.quorum<span class="token operator">&lt;</span>/name<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>value<span class="token operator">&gt;</span>node1,node2,node<span class="token operator"><span class="token file-descriptor important">3</span>&lt;</span>/value<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>/property<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">!</span>-- ZooKeeper快照的存储位置 --<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>property<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>name<span class="token operator">&gt;</span>hbase.zookeeper.property.dataDir<span class="token operator">&lt;</span>/name<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>value<span class="token operator">&gt;</span>/export/server/apache-zookeeper-3.6.0-bin/data<span class="token operator">&lt;</span>/value<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>/property<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">!</span>--  V2.1版本，在分布式情况下, 设置为false --<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>property<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>name<span class="token operator">&gt;</span>hbase.unsafe.stream.capability.enforce<span class="token operator">&lt;</span>/name<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>value<span class="token operator">&gt;</span>false<span class="token operator">&lt;</span>/value<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>/property<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>/configuration<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>【node1执行】，修改配置文件，修改<code>conf/regionservers</code>文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 填入如下内容</span>
node1
node2
node3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>【node1执行】，分发hbase到其它机器</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">scp</span> <span class="token parameter variable">-r</span> /export/server/hbase-2.1.0 node2:/export/server/
<span class="token function">scp</span> <span class="token parameter variable">-r</span> /export/server/hbase-2.1.0 node3:/export/server/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>【node2、node3执行】，配置软链接</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ln</span> <span class="token parameter variable">-s</span> /export/server/hbase-2.1.0 /export/server/hbase
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>【node1、node2、node3执行】，配置环境变量</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 配置在/etc/profile内，追加如下两行</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">HBASE_HOME</span><span class="token operator">=</span>/export/server/hbase
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token variable">$HBASE_HOME</span>/bin:<span class="token environment constant">$PATH</span>

<span class="token builtin class-name">source</span> /etc/profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,8),ga=a("li",null,[a("p",null,"【node1执行】启动HBase"),a("blockquote",null,[a("p",null,"请确保：Hadoop HDFS、Zookeeper是已经启动了的")]),a("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[s(`start-hbase.sh

`),a("span",{class:"token comment"},"# 如需停止可使用"),s(`
stop-hbase.sh
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"})])]),a("blockquote",null,[a("p",null,[s("由于我们配置了环境变量export PATH="),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"P"),a("mi",null,"A"),a("mi",null,"T"),a("mi",null,"H"),a("mo",null,":")]),a("annotation",{encoding:"application/x-tex"},"PATH:")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6833em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"P"),a("span",{class:"mord mathnormal"},"A"),a("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),a("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H"),a("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),a("span",{class:"mrel"},":")])])]),s("HBASE_HOME/bin")]),a("p",null,"start-hbase.sh即在$HBASE_HOME/bin内，所以可以无论当前目录在哪，均可直接执行")])],-1),ha=a("p",null,"验证HBase",-1),fa={href:"http://node1:16010",target:"_blank",rel:"noopener noreferrer"},xa=t(`<li><p>简单测试使用HBase</p><p>【node1执行】</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>hbase shell

<span class="token comment"># 创建表</span>
create <span class="token string">&#39;test&#39;</span>, <span class="token string">&#39;cf&#39;</span>

<span class="token comment"># 插入数据</span>
put <span class="token string">&#39;test&#39;</span>, <span class="token string">&#39;rk001&#39;</span>, <span class="token string">&#39;cf:info&#39;</span>, <span class="token string">&#39;itheima&#39;</span>

<span class="token comment"># 查询数据</span>
get <span class="token string">&#39;test&#39;</span>, <span class="token string">&#39;rk001&#39;</span>

<span class="token comment"># 扫描表数据</span>
scan <span class="token string">&#39;test&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,1),ya=t('<h1 id="分布式内存计算spark环境部署" tabindex="-1"><a class="header-anchor" href="#分布式内存计算spark环境部署" aria-hidden="true">#</a> 分布式内存计算Spark环境部署</h1><h2 id="注意-1" tabindex="-1"><a class="header-anchor" href="#注意-1" aria-hidden="true">#</a> 注意</h2><p>本小节的操作，基于：<code>大数据集群（Hadoop生态）安装部署</code>环节中所构建的Hadoop集群</p><p>如果没有Hadoop集群，请参阅前置内容，部署好环境。</p><h2 id="简介-11" tabindex="-1"><a class="header-anchor" href="#简介-11" aria-hidden="true">#</a> 简介</h2><p>Spark是一款分布式内存计算引擎，可以支撑海量数据的分布式计算。</p><p>Spark在大数据体系是明星产品，作为最新一代的综合计算引擎，支持离线计算和实时计算。</p><p>在大数据领域广泛应用，是目前世界上使用最多的大数据分布式计算引擎。</p><p>我们将基于前面构建的Hadoop集群，部署Spark Standalone集群。</p><h2 id="安装-11" tabindex="-1"><a class="header-anchor" href="#安装-11" aria-hidden="true">#</a> 安装</h2>',10),_a=t(`<li><p>【node1执行】下载并解压</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> https://archive.apache.org/dist/spark/spark-2.4.5/spark-2.4.5-bin-hadoop2.7.tgz

<span class="token comment"># 解压</span>
<span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> spark-2.4.5-bin-hadoop2.7.tgz <span class="token parameter variable">-C</span> /export/server/

<span class="token comment"># 软链接</span>
<span class="token function">ln</span> <span class="token parameter variable">-s</span> /export/server/spark-2.4.5-bin-hadoop2.7 /export/server/spark
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>【node1执行】修改配置文件名称</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 改名</span>
<span class="token builtin class-name">cd</span> /export/server/spark/conf
<span class="token function">mv</span> spark-env.sh.template spark-env.sh
<span class="token function">mv</span> slaves.template slaves
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>【node1执行】修改配置文件，<code>spark-env.sh</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">## 设置JAVA安装目录</span>
<span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/export/server/jdk

<span class="token comment">## HADOOP软件配置文件目录，读取HDFS上文件和运行YARN集群</span>
<span class="token assign-left variable">HADOOP_CONF_DIR</span><span class="token operator">=</span>/export/server/hadoop/etc/hadoop
<span class="token assign-left variable">YARN_CONF_DIR</span><span class="token operator">=</span>/export/server/hadoop/etc/hadoop

<span class="token comment">## 指定spark老大Master的IP和提交任务的通信端口</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">SPARK_MASTER_HOST</span><span class="token operator">=</span>node1
<span class="token builtin class-name">export</span> <span class="token assign-left variable">SPARK_MASTER_PORT</span><span class="token operator">=</span><span class="token number">7077</span>

<span class="token assign-left variable">SPARK_MASTER_WEBUI_PORT</span><span class="token operator">=</span><span class="token number">8080</span>
<span class="token assign-left variable">SPARK_WORKER_CORES</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">SPARK_WORKER_MEMORY</span><span class="token operator">=</span>1g
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>【node1执行】修改配置文件，<code>slaves</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>node1
node2
node3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>【node1执行】分发</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">scp</span> <span class="token parameter variable">-r</span> spark-2.4.5-bin-hadoop2.7 node2:<span class="token environment constant">$PWD</span>
<span class="token function">scp</span> <span class="token parameter variable">-r</span> spark-2.4.5-bin-hadoop2.7 node3:<span class="token environment constant">$PWD</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>【node2、node3执行】设置软链接</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ln</span> <span class="token parameter variable">-s</span> /export/server/spark-2.4.5-bin-hadoop2.7 /export/server/spark
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>【node1执行】启动Spark集群</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/export/server/spark/sbin/start-all.sh

<span class="token comment"># 如需停止，可以</span>
/export/server/spark/sbin/stop-all.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,7),qa={href:"http://node1:8081",target:"_blank",rel:"noopener noreferrer"},Sa=t(`<li><p>【node1执行】提交测试任务</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/export/server/spark/bin/spark-submit <span class="token parameter variable">--master</span> spark://node1:7077 <span class="token parameter variable">--class</span> org.apache.spark.examples.SparkPi /export/server/spark/examples/jars/spark-examples_2.11-2.4.5.jar
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>`,1),Ea=t(`<h1 id="分布式内存计算flink环境部署" tabindex="-1"><a class="header-anchor" href="#分布式内存计算flink环境部署" aria-hidden="true">#</a> 分布式内存计算Flink环境部署</h1><h2 id="注意-2" tabindex="-1"><a class="header-anchor" href="#注意-2" aria-hidden="true">#</a> 注意</h2><p>本小节的操作，基于：<code>大数据集群（Hadoop生态）安装部署</code>环节中所构建的Hadoop集群</p><p>如果没有Hadoop集群，请参阅前置内容，部署好环境。</p><h2 id="简介-12" tabindex="-1"><a class="header-anchor" href="#简介-12" aria-hidden="true">#</a> 简介</h2><p>Flink同Spark一样，是一款分布式内存计算引擎，可以支撑海量数据的分布式计算。</p><p>Flink在大数据体系同样是明星产品，作为最新一代的综合计算引擎，支持离线计算和实时计算。</p><p>在大数据领域广泛应用，是目前世界上除去Spark以外，应用最为广泛的分布式计算引擎。</p><p>我们将基于前面构建的Hadoop集群，部署Flink Standalone集群</p><p>Spark更加偏向于离线计算而Flink更加偏向于实时计算。</p><h2 id="安装-12" tabindex="-1"><a class="header-anchor" href="#安装-12" aria-hidden="true">#</a> 安装</h2><ol><li><p>【node1操作】下载安装包</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> https://archive.apache.org/dist/flink/flink-1.10.0/flink-1.10.0-bin-scala_2.11.tgz

<span class="token comment"># 解压</span>
<span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> flink-1.10.0-bin-scala_2.11.tgz <span class="token parameter variable">-C</span> /export/server/

<span class="token comment"># 软链接</span>
<span class="token function">ln</span> <span class="token parameter variable">-s</span> /export/server/flink-1.10.0 /export/server/flink
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>【node1操作】修改配置文件，<code>conf/flink-conf.yaml</code></p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># jobManager 的IP地址</span>
<span class="token key atrule">jobmanager.rpc.address</span><span class="token punctuation">:</span> node1
<span class="token comment"># JobManager 的端口号</span>
<span class="token key atrule">jobmanager.rpc.port</span><span class="token punctuation">:</span> <span class="token number">6123</span>
<span class="token comment"># JobManager JVM heap 内存大小</span>
<span class="token key atrule">jobmanager.heap.size</span><span class="token punctuation">:</span> 1024m
<span class="token comment"># TaskManager JVM heap 内存大小</span>
<span class="token key atrule">taskmanager.heap.size</span><span class="token punctuation">:</span> 1024m
<span class="token comment"># 每个 TaskManager 提供的任务 slots 数量大小</span>
<span class="token key atrule">taskmanager.numberOfTaskSlots</span><span class="token punctuation">:</span> <span class="token number">2</span>
<span class="token comment">#是否进行预分配内存，默认不进行预分配，这样在我们不使用flink集群时候不会占用集群资源</span>
<span class="token key atrule">taskmanager.memory.preallocate</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
<span class="token comment"># 程序默认并行计算的个数</span>
<span class="token key atrule">parallelism.default</span><span class="token punctuation">:</span> <span class="token number">1</span>
<span class="token comment">#JobManager的Web界面的端口（默认：8081）</span>
<span class="token key atrule">jobmanager.web.port</span><span class="token punctuation">:</span> <span class="token number">8081</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>【node1操作】，修改配置文件，<code>conf/slaves</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>node1
node2
node3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>【node1操作】分发Flink安装包到其它机器</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /export/server
<span class="token function">scp</span> <span class="token parameter variable">-r</span> flink-1.10.0 node2:<span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">pwd</span><span class="token variable">\`</span></span>/
<span class="token function">scp</span> <span class="token parameter variable">-r</span> flink-1.10.0 node3:<span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">pwd</span><span class="token variable">\`</span></span>/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>【node2、node3操作】</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 配置软链接</span>
<span class="token function">ln</span> <span class="token parameter variable">-s</span> /export/server/flink-1.10.0 /export/server/flink
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>【node1操作】，启动Flink</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/export/server/flink/bin/start-cluster.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>验证Flink启动</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 浏览器打开</span>
http://node1:8081
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>提交测试任务</p><p>【node1执行】</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/export/server/flink/bin/flink run /export/server/flink-1.10.0/examples/batch/WordCount.jar
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h1 id="运维监控zabbix部署" tabindex="-1"><a class="header-anchor" href="#运维监控zabbix部署" aria-hidden="true">#</a> 运维监控Zabbix部署</h1><h2 id="简介-13" tabindex="-1"><a class="header-anchor" href="#简介-13" aria-hidden="true">#</a> 简介</h2><p>Zabbix 由 Alexei Vladishev 创建，目前由其成立的公司—— Zabbix SIA 积极的持续开发更新维护， 并为用户提供技术支持服务。</p><p>Zabbix 是一个<mark>企业级分布式开源监控解决方案</mark>。</p><p>Zabbix 软件能够<mark>监控</mark>众多网络参数和服务器的<mark>健康度、完整性</mark>。Zabbix 使用灵活的告警机制，允许用户为几乎任何事件配置基于邮件的告警。这样用户可以快速响应服务器问题。Zabbix 基于存储的数据提供出色的报表和数据可视化功能。这些功能使得 Zabbix 成为容量规划的理想选择。</p><h2 id="安装-13" tabindex="-1"><a class="header-anchor" href="#安装-13" aria-hidden="true">#</a> 安装</h2><blockquote><p>安装整体步骤:</p></blockquote><ol><li>准备Linux 服务器(虚拟机)</li><li>安装Mysql</li><li>安装zabbix( 包含 server agent web)</li><li>配置 mysql, 为zabbix创建表结构</li><li>配置zabbix server</li><li>启动并开启开机自启动</li></ol><figure><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/26/20221026175324.png" alt="1574338996145" tabindex="0" loading="lazy"><figcaption>1574338996145</figcaption></figure><h3 id="安装前准备-mysql" tabindex="-1"><a class="header-anchor" href="#安装前准备-mysql" aria-hidden="true">#</a> 安装前准备 - Mysql</h3><p>安装ZabbixServer需要先安装好<code>Mysql</code>数据库</p><p>课程使用<code>Mysql 5.7</code></p><p>安装步骤：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 安装Mysql yum库</span>
<span class="token function">rpm</span> <span class="token parameter variable">-Uvh</span> http://repo.mysql.com//mysql57-community-release-el7-7.noarch.rpm

<span class="token comment"># yum安装Mysql</span>
yum <span class="token parameter variable">-y</span> <span class="token function">install</span> mysql-community-server

<span class="token comment"># 启动Mysql设置开机启动</span>
systemctl start mysqld
systemctl <span class="token builtin class-name">enable</span> mysqld

<span class="token comment"># 检查Mysql服务状态</span>
systemctl status mysqld

<span class="token comment"># 第一次启动mysql，会在日志文件中生成root用户的一个随机密码，使用下面命令查看该密码</span>
<span class="token function">grep</span> <span class="token string">&#39;temporary password&#39;</span> /var/log/mysqld.log

<span class="token comment"># 修改root用户密码</span>
mysql <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span> <span class="token parameter variable">-h</span> localhost
Enter password:
 
mysql<span class="token operator">&gt;</span> ALTER <span class="token environment constant">USER</span> <span class="token string">&#39;root&#39;</span>@<span class="token string">&#39;localhost&#39;</span> IDENTIFIED BY <span class="token string">&#39;Root!@#$&#39;</span><span class="token punctuation">;</span>

<span class="token comment"># 如果你想设置简单密码，需要降低Mysql的密码安全级别</span>
<span class="token builtin class-name">set</span> global <span class="token assign-left variable">validate_password_policy</span><span class="token operator">=</span>LOW<span class="token punctuation">;</span> <span class="token comment"># 密码安全级别低</span>
<span class="token builtin class-name">set</span> global <span class="token assign-left variable">validate_password_length</span><span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">;</span>	 <span class="token comment"># 密码长度最低4位即可</span>

<span class="token comment"># 然后就可以用简单密码了（课程中使用简单密码，为了方便，生产中不要这样）</span>
ALTER <span class="token environment constant">USER</span> <span class="token string">&#39;root&#39;</span>@<span class="token string">&#39;localhost&#39;</span> IDENTIFIED BY <span class="token string">&#39;root&#39;</span><span class="token punctuation">;</span>
mysql<span class="token operator">&gt;</span> grant all privileges on *.* to root@<span class="token string">&#39;%&#39;</span> identified by <span class="token string">&#39;root&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="安装zabbix-server-和-zabbix-agent" tabindex="-1"><a class="header-anchor" href="#安装zabbix-server-和-zabbix-agent" aria-hidden="true">#</a> 安装Zabbix Server 和 Zabbix Agent</h3><blockquote><p>初始安装，我们先安装ZabbixServer以及在Server本机安装Agent。</p></blockquote>`,28),za={href:"https://www.zabbix.com/download?zabbix=4.0&os_distribution=centos&os_version=7&db=mysql",target:"_blank",rel:"noopener noreferrer"},Ha=t('<figure><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/26/20221026175330.png" alt="1571981197131" tabindex="0" loading="lazy"><figcaption>1571981197131</figcaption></figure><p>选择对应的版本，然后再下面官网给出了具体的安装命令，使用<code>rpm</code>和<code>yum</code>来进行安装。</p><p>需要有网络。</p><p><code>以下内容来自官方页面</code></p><h4 id="a-安装zabbix-yum库" tabindex="-1"><a class="header-anchor" href="#a-安装zabbix-yum库" aria-hidden="true">#</a> a. 安装Zabbix yum库</h4>',5),wa={href:"https://www.zabbix.com/documentation/4.0/manual/installation/install_from_packages",target:"_blank",rel:"noopener noreferrer"},Aa=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">rpm</span> <span class="token parameter variable">-Uvh</span> https://repo.zabbix.com/zabbix/4.0/rhel/7/x86_64/zabbix-release-4.0-2.el7.noarch.rpm
yum clean all
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="b-安装zabbix-server、前端、agent" tabindex="-1"><a class="header-anchor" href="#b-安装zabbix-server、前端、agent" aria-hidden="true">#</a> b. 安装Zabbix Server、前端、Agent</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token parameter variable">-y</span> <span class="token function">install</span> zabbix-server-mysql zabbix-web-mysql zabbix-agent
<span class="token comment"># 如果只需要安装Agent的话</span>
yum <span class="token parameter variable">-y</span> <span class="token function">install</span> zabbix-agent
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="c-初始化mysql数据库" tabindex="-1"><a class="header-anchor" href="#c-初始化mysql数据库" aria-hidden="true">#</a> c. 初始化Mysql数据库</h4>`,4),Ma={href:"https://www.zabbix.com/documentation/4.0/manual/appendix/install/db_scripts",target:"_blank",rel:"noopener noreferrer"},Oa=t(`<blockquote><p>在Mysql中操作</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 登录Mysql 数据库</span>
mysql <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-pYourPassword</span>
mysql<span class="token operator">&gt;</span> create database zabbix character <span class="token builtin class-name">set</span> utf8 collate utf8_bin<span class="token punctuation">;</span>
mysql<span class="token operator">&gt;</span> grant all privileges on zabbix.* to zabbix@localhost identified by <span class="token string">&#39;zabbix&#39;</span><span class="token punctuation">;</span>
<span class="token comment"># 或者: grant all privileges on zabbix.* to zabbix@&#39;%&#39; identified by &#39;zabbix&#39;;</span>
mysql<span class="token operator">&gt;</span> quit<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>测试在Zabbix Server服务器上能否远程登录Mysql，如果可以登录继续向下走。</p><p>Import initial schema and data. You will be prompted to enter your newly created password.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># zcat /usr/share/doc/zabbix-server-mysql*/create.sql.gz | mysql -uzabbix -p zabbix</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="d-为zabbix-server配置数据库" tabindex="-1"><a class="header-anchor" href="#d-为zabbix-server配置数据库" aria-hidden="true">#</a> d. 为Zabbix Server配置数据库</h4><p>Edit file /etc/zabbix/zabbix_server.conf</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">DBPassword</span><span class="token operator">=</span>password
<span class="token assign-left variable">DBHost</span><span class="token operator">=</span>mysql-host-ip-or-hostname
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="e-配置zabbix的php前端" tabindex="-1"><a class="header-anchor" href="#e-配置zabbix的php前端" aria-hidden="true">#</a> e. 配置Zabbix的PHP前端</h4><p>Edit file <code>/etc/httpd/conf.d/zabbix.conf</code>, uncomment and set the right timezone for you.<code># php_value date.timezone Asia/Shanghai</code></p><p>Start Zabbix server and agent processes and make it start at system boot:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl restart zabbix-server zabbix-agent httpd <span class="token comment"># 启动、重启</span>
systemctl <span class="token builtin class-name">enable</span> zabbix-server zabbix-agent httpd  <span class="token comment"># 开机自启</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Now your Zabbix server is up and running!</p><h3 id="配置zabbix-前端-web-ui" tabindex="-1"><a class="header-anchor" href="#配置zabbix-前端-web-ui" aria-hidden="true">#</a> 配置zabbix 前端（WEB UI）</h3><p><strong>打开:<code>http://192.168.88.131/zabbix</code></strong></p><p>即可进入Zabbix页面，在首次打开的时候，会进入设置页面，如图：</p><figure><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/26/20221026175338.png" alt="1571993951841" tabindex="0" loading="lazy"><figcaption>1571993951841</figcaption></figure><p><strong>点击下一步，会检查相应的设置是否都正常</strong></p><figure><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/26/20221026175341.png" alt="1571994018126" tabindex="0" loading="lazy"><figcaption>1571994018126</figcaption></figure><p>如果一切正常，点击下一步。</p><p><strong>配置DB连接</strong></p><figure><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/26/20221026175344.png" alt="1571994069689" tabindex="0" loading="lazy"><figcaption>1571994069689</figcaption></figure><p>按具体情况填写即可</p><p><strong>配置Server细节</strong></p><figure><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/26/20221026175347.png" alt="1571994111921" tabindex="0" loading="lazy"><figcaption>1571994111921</figcaption></figure><p>具体配置即可，Name表示这个Zabbix服务的名字，这里起名叫<code>ITHEIMA-TEST</code></p><p><strong>安装前总结预览</strong></p><p>检查确认没有问题就下一步</p><figure><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/26/20221026175349.png" alt="1571994206902" tabindex="0" loading="lazy"><figcaption>1571994206902</figcaption></figure><p><strong>配置完成</strong></p><figure><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/26/20221026175351.png" alt="1571994221531" tabindex="0" loading="lazy"><figcaption>1571994221531</figcaption></figure><p><strong>初始管理员账户Admin密码zabbix</strong></p><p>输入账户密码后，就能进入zabbix页面了。</p><p>如下图：</p><figure><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/26/20221026175354.png" alt="1571994287036" tabindex="0" loading="lazy"><figcaption>1571994287036</figcaption></figure><p>现在是一个崭新的zabbix等待我们去探索。</p><h1 id="运维监控grafana部署" tabindex="-1"><a class="header-anchor" href="#运维监控grafana部署" aria-hidden="true">#</a> 运维监控Grafana部署</h1><h2 id="简介-14" tabindex="-1"><a class="header-anchor" href="#简介-14" aria-hidden="true">#</a> 简介</h2><h2 id="安装-14" tabindex="-1"><a class="header-anchor" href="#安装-14" aria-hidden="true">#</a> 安装</h2><h3 id="部署形式" tabindex="-1"><a class="header-anchor" href="#部署形式" aria-hidden="true">#</a> 部署形式</h3><p><code>Grafana</code>支持两种部署形式</p><ol><li>自行部署, 可以部署在操作系统之上. 自行提供服务器, 域名等.</li><li><code>Grafana</code>官方托管. 无需安装, 在线注册即可得到一个专属于自己的<code>Grafana</code>, 但是要花钱的. 是一种<code>SaaS</code>服务</li></ol><p>我们课程选择方式1</p><h3 id="安装-15" tabindex="-1"><a class="header-anchor" href="#安装-15" aria-hidden="true">#</a> 安装</h3><p><code>Grafana</code>支持常见的绝大多数操作系统, 如<code>windows</code> <code>mac</code> <code>linux</code> 同时也支持部署在<code>docker</code>中.</p><p>大多数情况下, <code>Grafana</code>都是部署在<code>linux</code>服务器之上. 所以本课程也是基于<code>Linux</code>系统来讲解.</p>`,46),La=a("code",null,"windows",-1),Ra=a("code",null,"mac",-1),Da=a("code",null,"docker",-1),Na={href:"https://grafana.com/grafana/download",target:"_blank",rel:"noopener noreferrer"},Pa=t(`<p>我们部署<code>Grafana</code>可以使用<code>YUM</code>来进行部署.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 创建一个文件</span>
<span class="token function">vim</span> /etc/yum.repos.d/grafana.repo

<span class="token comment"># 将下面的内容复制进去</span>
<span class="token punctuation">[</span>grafana<span class="token punctuation">]</span>
<span class="token assign-left variable">name</span><span class="token operator">=</span>grafana
<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>https://packages.grafana.com/oss/rpm
<span class="token assign-left variable">repo_gpgcheck</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">gpgkey</span><span class="token operator">=</span>https://packages.grafana.com/gpg.key
<span class="token assign-left variable">sslverify</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">sslcacert</span><span class="token operator">=</span>/etc/pki/tls/certs/ca-bundle.crt

<span class="token comment"># 最后安装</span>
yum <span class="token function">install</span> grafana
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置说明" tabindex="-1"><a class="header-anchor" href="#配置说明" aria-hidden="true">#</a> 配置说明</h3><p><code>grafana-server</code>具有许多配置选项，这些选项可以在<code>.ini</code>配置文件中指定，也可以使用环境变量指定。</p><blockquote><p><strong>Note.</strong> <code>Grafana </code> needs to be restarted for any configuration changes to take effect.</p></blockquote><h4 id="配置文件注释" tabindex="-1"><a class="header-anchor" href="#配置文件注释" aria-hidden="true">#</a> 配置文件注释</h4><p><code>;</code>符号在<code>.ini</code>文件中全局表示注释 ()</p><h4 id="配置文件路径" tabindex="-1"><a class="header-anchor" href="#配置文件路径" aria-hidden="true">#</a> 配置文件路径</h4><p>如果是自己解压安装, 或者自行编译的方式安装, 配置文件在:</p><ul><li>默认: <code>$WORKING_DIR/conf/defaults.ini</code></li><li>自定义:<code>$WORKING_DIR/conf/custom.ini</code></li><li>自定义配置文件路径可以被参数<code>--config</code>覆盖</li></ul><blockquote><p>对于<code>YUM</code> <code>RPM</code> 安装的方式, 配置文件在: <code>/etc/grafana/grafana.ini</code></p></blockquote><h4 id="使用环境变量" tabindex="-1"><a class="header-anchor" href="#使用环境变量" aria-hidden="true">#</a> 使用环境变量</h4><p>可以使用以下语法使用环境变量来覆盖配置文件中的所有选项：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>GF_<span class="token operator">&lt;</span>SectionName<span class="token operator">&gt;</span>_<span class="token operator">&lt;</span>KeyName<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中<code>SectionName</code>是方括号内的文本。一切都应为大写，<code>.</code>应替换为<code>_</code> 例如，给定以下配置设置：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># default section</span>
instance_name <span class="token operator">=</span> <span class="token variable">\${<span class="token environment constant">HOSTNAME</span>}</span>

<span class="token punctuation">[</span>security<span class="token punctuation">]</span>
admin_user <span class="token operator">=</span> admin

<span class="token punctuation">[</span>auth.google<span class="token punctuation">]</span>
client_secret <span class="token operator">=</span> 0ldS3cretKey
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Then you can override them using:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">GF_DEFAULT_INSTANCE_NAME</span><span class="token operator">=</span>my-instance
<span class="token builtin class-name">export</span> <span class="token assign-left variable">GF_SECURITY_ADMIN_USER</span><span class="token operator">=</span>true	<span class="token comment"># GF_ 固定 SECURITY 是SectionName ADMIN_USER 是配置的key 转大写 . 转 _</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">GF_AUTH_GOOGLE_CLIENT_SECRET</span><span class="token operator">=</span>newS3cretKey
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="开始配置" tabindex="-1"><a class="header-anchor" href="#开始配置" aria-hidden="true">#</a> 开始配置</h3><p><code>Grafana</code>支持使用<code>Sqlite3</code> <code>Postgresql</code> <code>Mysql</code>这三种数据库作为其<code>元数据</code>的存储.</p><p>我们课程使用<code>Mysql</code>. 和<code>zabbix</code>的元数据mysql共用一个实例</p><p>只需要配置如下内容即可:</p><figure><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/26/20221026175713.png" alt="1573635500521" tabindex="0" loading="lazy"><figcaption>1573635500521</figcaption></figure><p>并登陆mysql, 执行:</p><p><code>create database grafana CHARACTER SET utf8 COLLATE utf8_general_ci;</code></p><p>创建<code>Grafana</code>使用的数据库作为元数据存储.</p><h3 id="启动" tabindex="-1"><a class="header-anchor" href="#启动" aria-hidden="true">#</a> 启动</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl daemon-reload
systemctl start grafana-server
systemctl <span class="token builtin class-name">enable</span> grafana-server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,28),Ia={href:"http://node1:3000",target:"_blank",rel:"noopener noreferrer"},Ta=a("p",null,"默认账户密码：admin/admin",-1);function ja(Qa,Ka){const n=l("ExternalLinkIcon");return p(),o("div",null,[r,a("ol",null,[a("li",null,[d,a("p",null,[a("a",u,[s("https://www.oracle.com/java/technologies/downloads"),e(n)])]),v,m,b,k,g]),h]),f,x,a("ol",null,[y,a("li",null,[_,a("p",null,[s("http://centos:8080或"),a("a",q,[s("http://192.168.88.130:8080"),e(n)])]),S,E])]),z,a("ol",null,[H,a("li",null,[w,a("p",null,[a("a",A,[s("http://192.168.88.130"),e(n)]),s(" 或 "),a("a",M,[s("http://centos"),e(n)])]),a("blockquote",null,[O,L,a("ul",null,[a("li",null,[a("a",R,[s("http://192.168.88.130:80"),e(n)])]),a("li",null,[a("a",D,[s("http://centos:80"),e(n)])])])])])]),N,a("ol",null,[P,a("li",null,[I,a("p",null,[a("a",T,[s("http://192.168.88.130:15672"),e(n)])]),j])]),Q,a("p",null,[a("a",K,[s("全文搜索"),e(n)]),s("属于最常见的需求，开源的 "),a("a",B,[s("Elasticsearch"),e(n)]),s(" （以下简称 es）是目前全文搜索引擎的首选。")]),C,F,Z,Y,a("ol",null,[J,a("li",null,[U,a("p",null,[s("浏览器打开："),a("a",G,[s("http://ip:9200/?pretty"),e(n)])]),W])]),$,a("p",null,[s("ZooKeeper是一个"),a("a",V,[s("分布式"),e(n)]),s("的，开放源码的"),a("a",X,[s("分布式应用程序"),e(n)]),s("协调服务，是Hadoop和"),a("a",aa,[s("Hbase"),e(n)]),s("的重要组件。它是一个为分布式应用提供"),sa,s("服务的软件，提供的功能包括：配置维护、域名服务、分布式同步、组服务等。")]),na,a("ol",null,[ea,a("li",null,[a("p",null,[s("验证HDFS，浏览器打开："),a("a",ta,[s("http://node1:9870"),e(n)])]),ia]),a("li",null,[a("p",null,[s("验证YARN，浏览器打开："),a("a",la,[s("http://node1:8088"),e(n)])]),pa])]),oa,ca,a("p",null,[s("HBase 是一种"),a("a",ra,[s("分布式"),e(n)]),s("、可扩展、支持海量数据存储的 NoSQL 数据库。")]),da,ua,va,ma,ba,a("ol",null,[ka,ga,a("li",null,[ha,a("p",null,[s("浏览器打开："),a("a",fa,[s("http://node1:16010"),e(n)]),s("，即可看到HBase的WEB UI页面")])]),xa]),ya,a("ol",null,[_a,a("li",null,[a("p",null,[s("打开Spark监控页面，浏览器打开："),a("a",qa,[s("http://node1:8081"),e(n)])])]),Sa]),Ea,a("p",null,[s("打开官网下载页面："),a("a",za,[s("https://www.zabbix.com/download?zabbix=4.0&os_distribution=centos&os_version=7&db=mysql"),e(n)])]),Ha,a("p",null,[a("a",wa,[s("documentation"),e(n)])]),Aa,a("p",null,[a("a",Ma,[s("documentation"),e(n)])]),Oa,a("p",null,[s("对"),La,s(),Ra,s("系统 或 "),Da,s("部署有兴趣的同学, 请参考: "),a("a",Na,[s("https://grafana.com/grafana/download"),e(n)])]),Pa,a("p",null,[s("浏览器打开："),a("a",Ia,[s("http://node1:3000"),e(n)])]),Ta])}const Fa=i(c,[["render",ja],["__file","deploying-various-software.html.vue"]]);export{Fa as default};
