import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as p,c as o,a as n,d as l,b as i,e as s}from"./app-7ec69092.js";const c={},d=s('<h1 id="mysql" tabindex="-1"><a class="header-anchor" href="#mysql" aria-hidden="true">#</a> MySQL</h1><h2 id="数据库相关概念" tabindex="-1"><a class="header-anchor" href="#数据库相关概念" aria-hidden="true">#</a> 数据库相关概念</h2><figure><img src="https://raw.githubusercontent.com/redyouzi/images-for-blog/main/img02/202208131320872.png" alt="image-20220813132000741" tabindex="0" loading="lazy"><figcaption>image-20220813132000741</figcaption></figure><h3 id="常见的关系型数据库管理系统" tabindex="-1"><a class="header-anchor" href="#常见的关系型数据库管理系统" aria-hidden="true">#</a> 常见的关系型数据库管理系统</h3><figure><img src="https://raw.githubusercontent.com/redyouzi/images-for-blog/main/img02/202208131320758.png" alt="image-20220813132058698" tabindex="0" loading="lazy"><figcaption>image-20220813132058698</figcaption></figure><h3 id="mysql下载官网" tabindex="-1"><a class="header-anchor" href="#mysql下载官网" aria-hidden="true">#</a> MySQL下载官网</h3>',6),r={href:"https://downloads.mysql.com/archives/community/",target:"_blank",rel:"noopener noreferrer"},u=s(`<h3 id="mysql登陆参数" tabindex="-1"><a class="header-anchor" href="#mysql登陆参数" aria-hidden="true">#</a> MySQL登陆参数</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysql <span class="token parameter variable">-u</span> 用户名 <span class="token parameter variable">-p</span> 密码 <span class="token punctuation">[</span>-h<span class="token punctuation">(</span>ip地址<span class="token punctuation">)</span> -P<span class="token punctuation">(</span>端口号默认3306<span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="mysql数据模型" tabindex="-1"><a class="header-anchor" href="#mysql数据模型" aria-hidden="true">#</a> MySQL数据模型</h3><h4 id="关系型数据库" tabindex="-1"><a class="header-anchor" href="#关系型数据库" aria-hidden="true">#</a> 关系型数据库</h4><figure><img src="https://raw.githubusercontent.com/redyouzi/images-for-blog/main/img02/202208131340887.png" alt="image-20220813134023770" tabindex="0" loading="lazy"><figcaption>image-20220813134023770</figcaption></figure><figure><img src="https://raw.githubusercontent.com/redyouzi/images-for-blog/main/img02/202208131342163.png" alt="image-20220813134216064" tabindex="0" loading="lazy"><figcaption>image-20220813134216064</figcaption></figure><h2 id="sql" tabindex="-1"><a class="header-anchor" href="#sql" aria-hidden="true">#</a> SQL</h2><ol><li>SQL语句可以单行或多行书写，以分号结尾</li><li>MySQL数据库的SQL语句部分大小写，关键字建议使用大写</li><li>注释 <ul><li>单行注释：<strong>--</strong> 注释内容或 **#**注释内容（SQL独有）</li><li>多行注释：*<em>/* 注释 <em>/</em></em></li></ul></li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SHOW</span> <span class="token keyword">DATABASES</span><span class="token punctuation">;</span> <span class="token comment">-- 查询所有数据库名称</span>
<span class="token keyword">SHOW</span> <span class="token keyword">DATABASES</span><span class="token punctuation">;</span> <span class="token comment">#查询所有数据库名称</span>
<span class="token keyword">SHOW</span> <span class="token keyword">DATABASES</span><span class="token punctuation">;</span><span class="token comment">/*select all database*/</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sql分类" tabindex="-1"><a class="header-anchor" href="#sql分类" aria-hidden="true">#</a> SQL分类</h3><ul><li>DDL 数据定义语言，用来定义数据库对象：数据库，表，列等</li><li>DML 数据库操作语言，用来对数据库中的表进行增删改</li><li>DQL 数据库查询语言，用来查询数据库中表的记录（数据）</li><li>DCL 数据控制语言，用来定义数据库的访问权限和安全级别，及创建用户的</li></ul><figure><img src="https://raw.githubusercontent.com/redyouzi/images-for-blog/main/img02/202208131346520.png" alt="image-20220813134639482" tabindex="0" loading="lazy"><figcaption>image-20220813134639482</figcaption></figure><h2 id="ddl" tabindex="-1"><a class="header-anchor" href="#ddl" aria-hidden="true">#</a> DDL</h2><h3 id="ddl-操作数据库" tabindex="-1"><a class="header-anchor" href="#ddl-操作数据库" aria-hidden="true">#</a> DDL--操作数据库</h3><ol><li><p>查询</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SHOW</span> <span class="token keyword">DATABASES</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>创建</p><ul><li><p>创建数据库</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> 数据库名称<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>创建数据库（判断，如果存在则不创建）</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> 数据库名称<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li><li><p>删除</p><ul><li><p>删除数据库</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">DATABASE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> 数据库名称<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li><li><p>使用数据库</p><ul><li><p>查看当前使用的数据库</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token keyword">DATABASE</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>使用数据库</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">USE</span> 数据库名称<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li></ol><figure><img src="https://raw.githubusercontent.com/redyouzi/images-for-blog/main/img02/202208131355520.png" alt="image-20220813135546408" tabindex="0" loading="lazy"><figcaption>image-20220813135546408</figcaption></figure><h3 id="ddl-操作表" tabindex="-1"><a class="header-anchor" href="#ddl-操作表" aria-hidden="true">#</a> DDL--操作表</h3><ul><li>创建(Create)</li><li>查询(Retrieve)</li><li>修改(Update)</li><li>删除(Delete)</li></ul><h4 id="查询表" tabindex="-1"><a class="header-anchor" href="#查询表" aria-hidden="true">#</a> 查询表</h4><ul><li><p>查询当前数据库下有哪些表的名称</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SHOW</span> <span class="token keyword">TABLES</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>查询表结构</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DESC</span> 表名称<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h4 id="创建表" tabindex="-1"><a class="header-anchor" href="#创建表" aria-hidden="true">#</a> 创建表</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> tb_user<span class="token punctuation">(</span>
id <span class="token keyword">int</span><span class="token punctuation">,</span>
username <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
password <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">DESC</span> tb_user<span class="token punctuation">;</span> <span class="token comment">-- 查看表的结构</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="数据类型" tabindex="-1"><a class="header-anchor" href="#数据类型" aria-hidden="true">#</a> 数据类型</h4><ul><li>MySQL支持多种类型，可以分为三类： <ul><li>数值</li><li>日期</li><li>字符串</li></ul></li></ul><figure><img src="https://raw.githubusercontent.com/redyouzi/images-for-blog/main/img02/202208131359372.png" alt="image-20220813135942300" tabindex="0" loading="lazy"><figcaption>image-20220813135942300</figcaption></figure><img src="https://raw.githubusercontent.com/redyouzi/images-for-blog/main/img02/202208131416713.png" alt="image-20220813141629612" style="zoom:50%;"><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> student <span class="token punctuation">(</span>
	id <span class="token keyword">INT</span><span class="token punctuation">,</span>
	NAME <span class="token keyword">VARCHAR</span> <span class="token punctuation">(</span> <span class="token number">10</span> <span class="token punctuation">)</span><span class="token punctuation">,</span>
	gender <span class="token keyword">CHAR</span> <span class="token punctuation">(</span> <span class="token number">1</span> <span class="token punctuation">)</span><span class="token punctuation">,</span>
	brithday <span class="token keyword">DATE</span><span class="token punctuation">,</span>
	score <span class="token keyword">DOUBLE</span> <span class="token punctuation">(</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token punctuation">)</span><span class="token punctuation">,</span>
	email <span class="token keyword">VARCHAR</span> <span class="token punctuation">(</span> <span class="token number">64</span> <span class="token punctuation">)</span><span class="token punctuation">,</span>
	tel <span class="token keyword">VARCHAR</span> <span class="token punctuation">(</span> <span class="token number">15</span> <span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token keyword">STATUS</span> <span class="token keyword">TINYINT</span> <span class="token comment">-- 最后一行没有逗号</span>

<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">DESC</span> student<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="修改" tabindex="-1"><a class="header-anchor" href="#修改" aria-hidden="true">#</a> 修改</h4><ol><li><p>修改表名</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">RENAME</span> <span class="token keyword">TO</span> 新的表名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>添加一列</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">ADD</span> 列名 数据类型<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>修改数据类型</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">MODIFY</span> 列名 新的数据类型<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>修改列名和数据类型</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 CHANGE 列名 新列名 新数据类型<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>删除列</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">DROP</span> 列名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://raw.githubusercontent.com/redyouzi/images-for-blog/main/img02/202208131422438.png" alt="image-20220813142255313" tabindex="0" loading="lazy"><figcaption>image-20220813142255313</figcaption></figure></li></ol><h4 id="删除" tabindex="-1"><a class="header-anchor" href="#删除" aria-hidden="true">#</a> 删除</h4><ol><li><p>删除表</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> 表名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>删除表时判断表是否存在</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> 表名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h2 id="dml" tabindex="-1"><a class="header-anchor" href="#dml" aria-hidden="true">#</a> DML</h2><ul><li>添加(insert)</li><li>修改(update)</li><li>删除(delete)</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">/*----------- insert----------*/</span>
<span class="token keyword">SELECT</span>
	<span class="token operator">*</span> 
<span class="token keyword">FROM</span>
	tb_user<span class="token punctuation">;</span>
	
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> tb_user <span class="token punctuation">(</span> id<span class="token punctuation">,</span> username <span class="token punctuation">)</span>
<span class="token keyword">VALUES</span>
	<span class="token punctuation">(</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;张三&#39;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
	
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> tb_user <span class="token punctuation">(</span> id<span class="token punctuation">,</span> username<span class="token punctuation">,</span> PASSWORD <span class="token punctuation">)</span>
<span class="token keyword">VALUES</span>
	<span class="token punctuation">(</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;王五&#39;</span><span class="token punctuation">,</span> <span class="token number">123456</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
	
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> tb_user <span class="token comment">-- 如果给所有的列添加数据，列名可以省略，不过不建议省略</span>
<span class="token keyword">VALUES</span>
	<span class="token punctuation">(</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;李四&#39;</span><span class="token punctuation">,</span> <span class="token number">123</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">/*   批量添加   */</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> tb_user
<span class="token keyword">VALUES</span>
	<span class="token punctuation">(</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;李四&#39;</span><span class="token punctuation">,</span> <span class="token number">123</span> <span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;李四&#39;</span><span class="token punctuation">,</span> <span class="token number">123</span> <span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;李四&#39;</span><span class="token punctuation">,</span> <span class="token number">123</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
	
<span class="token comment">/*--------update-----------*/</span>
<span class="token keyword">UPDATE</span> tb_user 
<span class="token keyword">SET</span> id <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">,</span>
username <span class="token operator">=</span> <span class="token string">&#39;lisi&#39;</span><span class="token punctuation">,</span>
PASSWORD <span class="token operator">=</span> <span class="token number">222</span> 
<span class="token keyword">WHERE</span>
	id <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
	
<span class="token keyword">UPDATE</span> tb_user 
<span class="token keyword">SET</span> PASSWORD <span class="token operator">=</span> <span class="token number">123333</span> 
<span class="token keyword">WHERE</span>
	id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
	
<span class="token keyword">SELECT</span>
	<span class="token operator">*</span> 
<span class="token keyword">FROM</span>
	tb_user<span class="token punctuation">;</span>
	
<span class="token comment">/*----删除数据------*/</span>
<span class="token keyword">DELETE</span> 
<span class="token keyword">FROM</span>
	tb_user 
<span class="token keyword">WHERE</span> <span class="token comment">-- 如果不加where会删除所有的数据</span>
	id <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="dql" tabindex="-1"><a class="header-anchor" href="#dql" aria-hidden="true">#</a> DQL</h2><h3 id="查询语法" tabindex="-1"><a class="header-anchor" href="#查询语法" aria-hidden="true">#</a> 查询语法</h3><ul><li>基础查询</li><li>条件查询(WHERE)</li><li>分组查询(GROUP BY)</li><li>排序查询(ORDER BY)</li><li>分页查询(LIMIT)</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	字段列表
<span class="token keyword">FROM</span>
	表名列表
<span class="token keyword">WHERE</span>
	条件列表
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span>
	分组字段
<span class="token keyword">HAVING</span>
	分组后的条件
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span>
	排序字段
<span class="token keyword">LIMIT</span>
	分页限定
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="补充" tabindex="-1"><a class="header-anchor" href="#补充" aria-hidden="true">#</a> 补充</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 去除重复 distinct</span>
<span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span> 列名 <span class="token keyword">FROM</span> 表名<span class="token punctuation">;</span>
<span class="token comment">-- 起别名 as（as不写也可以，但是得有一个空格）</span>
<span class="token keyword">SELECT</span> 原列名 <span class="token keyword">AS</span> 别名<span class="token punctuation">,</span>原列名 <span class="token keyword">AS</span> 别名 <span class="token keyword">FROM</span> 表名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://raw.githubusercontent.com/redyouzi/images-for-blog/main/img02/202208131500883.png" alt="image-20220813150012732" tabindex="0" loading="lazy"><figcaption>image-20220813150012732</figcaption></figure><h3 id="条件查询" tabindex="-1"><a class="header-anchor" href="#条件查询" aria-hidden="true">#</a> 条件查询</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 查询age在20到30之间的  BETWEEN 20 and 30;</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> tb_user <span class="token keyword">WHERE</span> age <span class="token operator">BETWEEN</span> <span class="token number">20</span> <span class="token operator">and</span> <span class="token number">30</span><span class="token punctuation">;</span>

<span class="token comment">-- 模糊查询</span>
<span class="token comment">-- _代表一个占位符；%代表多个占位符</span>
<span class="token comment">-- 查询性马的信息</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> tb_user <span class="token keyword">WHERE</span> name <span class="token operator">LIKE</span> <span class="token string">&#39;马%&#39;</span><span class="token punctuation">;</span>
<span class="token comment">-- 查询第二个字是花的信息</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> tb_user <span class="token keyword">WHERE</span> name <span class="token operator">LIKE</span> <span class="token string">&#39;_花%&#39;</span><span class="token punctuation">;</span>
<span class="token comment">-- 查询名字中包含德的信息(最常用的)</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> tb_user <span class="token keyword">WHERE</span> name <span class="token operator">LIKE</span> <span class="token string">&#39;%德%&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://raw.githubusercontent.com/redyouzi/images-for-blog/main/img02/202208131506220.png" alt="image-20220813150616143" tabindex="0" loading="lazy"><figcaption>image-20220813150616143</figcaption></figure><h3 id="排序查询" tabindex="-1"><a class="header-anchor" href="#排序查询" aria-hidden="true">#</a> 排序查询</h3><ol><li><p>排序查询语法</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表名 <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> 排序字段名<span class="token number">1</span> <span class="token punctuation">[</span>排序方式<span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>排序字段名<span class="token number">2</span> <span class="token punctuation">[</span>排序方式<span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><p>排序方式：</p><ul><li>ASC：升序排列（默认值）</li><li>DESC：降序排列</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 查询学生信息，按照年龄升序排序</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> tb_user <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> age <span class="token keyword">ASC</span><span class="token punctuation">;</span>
<span class="token comment">-- 查询数学成绩按照降序排列，如果数学成绩一样，按照英语成绩升序排列</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> tb_user <span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token keyword">match</span> <span class="token keyword">desc</span><span class="token punctuation">,</span>english <span class="token keyword">asc</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://raw.githubusercontent.com/redyouzi/images-for-blog/main/img02/202208131518779.png" alt="image-20220813151814709" tabindex="0" loading="lazy"><figcaption>image-20220813151814709</figcaption></figure><h3 id="分组查询" tabindex="-1"><a class="header-anchor" href="#分组查询" aria-hidden="true">#</a> 分组查询</h3><h4 id="聚合函数" tabindex="-1"><a class="header-anchor" href="#聚合函数" aria-hidden="true">#</a> 聚合函数</h4><ol><li><p>将一列作为一个整体，进行纵向计算</p></li><li><p>聚合函数分类</p><table><thead><tr><th>函数名</th><th>功能</th></tr></thead><tbody><tr><td>count(列名)</td><td>统计数量（一般选用不为null的列）</td></tr><tr><td>max(列名)</td><td>最大值</td></tr><tr><td>min(列名)</td><td>最小值</td></tr><tr><td>sum(列名)</td><td>求和</td></tr><tr><td>avg(列名)</td><td>平均值</td></tr></tbody></table></li><li><p>聚合函数语法：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 聚合函数<span class="token punctuation">(</span>列名<span class="token punctuation">)</span> <span class="token keyword">FROM</span> 表
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 统计班级一共有多少学生</span>
<span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> tb_user<span class="token punctuation">;</span>
<span class="token comment">-- 查询数学成绩的最高分</span>
<span class="token keyword">select</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">)</span> <span class="token keyword">from</span> tb_user<span class="token punctuation">;</span>
<span class="token comment">-- 查询英语成绩的最低分</span>
<span class="token keyword">select</span> <span class="token function">min</span><span class="token punctuation">(</span>english<span class="token punctuation">)</span> <span class="token keyword">from</span> tb_user<span class="token punctuation">;</span>
<span class="token comment">-- 查询数学成绩的总分</span>
<span class="token keyword">select</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">)</span> <span class="token keyword">from</span> tb_user<span class="token punctuation">;</span>
<span class="token comment">-- 查询数学成绩的平均分</span>
<span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">)</span> <span class="token keyword">from</span> tb_user<span class="token punctuation">;</span>
<span class="token comment">-- 查询英语成绩的最低分（存在null）</span>
<span class="token keyword">select</span> <span class="token function">min</span><span class="token punctuation">(</span>english<span class="token punctuation">)</span> <span class="token keyword">for</span> tb_user<span class="token punctuation">;</span><span class="token comment">-- 不是null值，聚合函数排除了null</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="分组查询-1" tabindex="-1"><a class="header-anchor" href="#分组查询-1" aria-hidden="true">#</a> 分组查询</h4><ol><li><p>分组查询语法</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> 字段列表 <span class="token keyword">from</span> 表名 <span class="token punctuation">[</span><span class="token keyword">where</span> 分组条件限定<span class="token punctuation">]</span> <span class="token keyword">group</span> <span class="token keyword">by</span> 分组字段名 <span class="token punctuation">[</span><span class="token keyword">having</span> 分组后条件过滤<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>注意：分组后，查询的字段为<strong>聚合函数</strong>和<strong>分组字段</strong>，查询其他的字段无任何意义</p></li><li><p>where和having区别：</p><ul><li><strong>执行时机不一样</strong>：where是分组之前进行限定，不满足where条件，则不参与分组，而having是分组后对结果进行过滤</li><li><strong>可判断的条件不一样</strong>：where不能对聚合函数进行判断，having可以</li></ul><p><strong>执行顺序：where &gt; 聚合函数 &gt; having</strong></p></li></ol><h3 id="分页查询" tabindex="-1"><a class="header-anchor" href="#分页查询" aria-hidden="true">#</a> 分页查询</h3><ol><li><p>分页查询语法</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> 字段列表 <span class="token keyword">from</span> 表名 <span class="token keyword">limit</span> 起始索引<span class="token punctuation">,</span>查询条目数<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>起始索引：从0开始</li><li>计算公式：起始索引 = （当前页码 - 1）* 每页显示的条目数</li></ul></li></ol><h2 id="约束" tabindex="-1"><a class="header-anchor" href="#约束" aria-hidden="true">#</a> 约束</h2><h3 id="概念" tabindex="-1"><a class="header-anchor" href="#概念" aria-hidden="true">#</a> 概念</h3><ol><li><p>约束概念</p><ul><li>约束是作用于表中列上的规则，用于限制加入表的数据</li><li>约束的存在保证了数据库中数据的正确性、有效性和完整性</li></ul></li><li><p>约束的分类</p><table><thead><tr><th>约束名称</th><th>描述</th><th>关键字</th></tr></thead><tbody><tr><td>非空约束</td><td>保证列中的所有数据不能有null值</td><td>NOT NULL</td></tr><tr><td>唯一约束</td><td>保证列中所有数据各不相同</td><td>UNIQUE</td></tr><tr><td>主键约束</td><td>主键是一行数据的唯一标识，要求非空且唯一</td><td>PRIMARY KEY</td></tr><tr><td>检查约束</td><td>保证列中的值满足某一条件</td><td>CHECK</td></tr><tr><td>默认约束</td><td>保存数据时，未指定值采用某人值</td><td>DEFAULT</td></tr><tr><td>外键约束</td><td>外键用来让两个表的数据之间建立连接，保证数据的一致性和完整性</td><td>FOREIGN KEY</td></tr></tbody></table></li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> emp<span class="token punctuation">;</span>

<span class="token comment">-- 员工表</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> emp<span class="token punctuation">(</span>
	id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span><span class="token comment">-- 员工id，主键且自增长</span>
	ename <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">unique</span><span class="token punctuation">,</span><span class="token comment">-- 员工姓名，非空且唯一</span>
	joindate <span class="token keyword">date</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span><span class="token comment">-- 入职日期，非空</span>
	salary <span class="token keyword">double</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span><span class="token comment">-- 工资，非空</span>
	bonus <span class="token keyword">double</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token number">0</span> <span class="token comment">-- 奖金，如果没有奖金，默认为0  </span>

<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> emp <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;2020-1-1&#39;</span><span class="token punctuation">,</span><span class="token number">3500</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> emp <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">&#39;张三sa&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;2020-1-1&#39;</span><span class="token punctuation">,</span><span class="token number">3500</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 演示自动增长 auto_increment</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> emp<span class="token punctuation">(</span>ename<span class="token punctuation">,</span>joindate<span class="token punctuation">,</span>salary<span class="token punctuation">,</span>bonus<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">&#39;张珊珊1&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;2022-2-2&#39;</span><span class="token punctuation">,</span><span class="token number">5000</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> emp <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">&#39;张珊珊&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;2022-2-2&#39;</span><span class="token punctuation">,</span><span class="token number">5000</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="外键约束" tabindex="-1"><a class="header-anchor" href="#外键约束" aria-hidden="true">#</a> 外键约束</h2><ol><li><p>概念</p><ul><li>外键用来让<strong>两个表之间建立连接的</strong>，保证数据的一致性和完整性</li></ul></li><li><p>语法</p><ul><li>添加约束</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 部门表</span>
<span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> dept<span class="token punctuation">;</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> dept<span class="token punctuation">(</span>
	id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>
	dep_name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	addr <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 员工表</span>
<span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> emp<span class="token punctuation">;</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> emp<span class="token punctuation">(</span>
	id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>
	name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	age <span class="token keyword">int</span><span class="token punctuation">,</span>
	dep_id <span class="token keyword">int</span><span class="token punctuation">,</span>
	<span class="token comment">-- 添加外键，关联dept表的主键</span>
	<span class="token comment">-- 外键：foreign key(这个表中要作为外键的列，id)</span>
	<span class="token comment">-- 关联：references 关联的表(id)</span>
	<span class="token keyword">constraint</span> fk_emp_dept <span class="token keyword">foreign</span> <span class="token keyword">key</span><span class="token punctuation">(</span>dep_id<span class="token punctuation">)</span> <span class="token keyword">references</span> dept<span class="token punctuation">(</span>id<span class="token punctuation">)</span>
	
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 添加部门</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> dept <span class="token punctuation">(</span>dep_name<span class="token punctuation">,</span>addr<span class="token punctuation">)</span> <span class="token keyword">values</span>
<span class="token punctuation">(</span><span class="token string">&#39;研发部&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;广州&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token string">&#39;销售部&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;深圳&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">-- 添加员工，dep_id 表示员工所在的部门</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> emp <span class="token punctuation">(</span>name<span class="token punctuation">,</span>age<span class="token punctuation">,</span>dep_id<span class="token punctuation">)</span> <span class="token keyword">values</span>
<span class="token punctuation">(</span><span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token string">&#39;李四&#39;</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token string">&#39;王五&#39;</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token string">&#39;赵六&#39;</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token string">&#39;小明&#39;</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token string">&#39;小白&#39;</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- -------------</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp<span class="token punctuation">;</span>

<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> dept<span class="token punctuation">;</span>
<span class="token keyword">delete</span> <span class="token keyword">from</span> dept <span class="token keyword">where</span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

<span class="token keyword">alter</span> <span class="token keyword">table</span> db1<span class="token punctuation">.</span>emp <span class="token keyword">drop</span> <span class="token keyword">foreign</span> <span class="token keyword">key</span> fk_emp_dept<span class="token punctuation">;</span>

<span class="token keyword">alter</span> <span class="token keyword">table</span> db1<span class="token punctuation">.</span>emp <span class="token keyword">add</span> <span class="token keyword">constraint</span> fk_emp_dept <span class="token keyword">foreign</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>dep_id<span class="token punctuation">)</span> <span class="token keyword">references</span> dept<span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><figure><img src="https://raw.githubusercontent.com/redyouzi/images-for-blog/main/img02/202208131614537.png" alt="image-20220813161441371" tabindex="0" loading="lazy"><figcaption>image-20220813161441371</figcaption></figure><h2 id="数据库设计" tabindex="-1"><a class="header-anchor" href="#数据库设计" aria-hidden="true">#</a> 数据库设计</h2><h3 id="数据库设计步骤" tabindex="-1"><a class="header-anchor" href="#数据库设计步骤" aria-hidden="true">#</a> 数据库设计步骤</h3><ol><li>需求分析（数据是什么？数据具体有哪些属性？数据与属性的特点是什么？）</li><li>逻辑分析（通过ER图对数据库进行逻辑建模，不需要考虑我们所选用的数据库管理系统）</li><li>物理设计（根据数据库自身的特点把逻辑设计转换为物理设计）</li><li>维护设计（1. 对新的需求进行建模；2.表的优化）</li></ol><figure><img src="https://raw.githubusercontent.com/redyouzi/images-for-blog/main/img02/202208131619104.png" alt="image-20220813161930018" tabindex="0" loading="lazy"><figcaption>image-20220813161930018</figcaption></figure><h3 id="表的关系" tabindex="-1"><a class="header-anchor" href="#表的关系" aria-hidden="true">#</a> 表的关系</h3><ul><li><p>一对一：</p><ul><li>如：用户 和 用户详情</li><li>一对一多用于表的拆分，将一个实体中经常使用的字段放在一张表中，不经常使用的放在另一张表中，用于提升查询的性能</li><li>实现方式：在任意一方建立外键，关联对方主键，并<strong>设置外键唯一(unique)</strong></li></ul><figure><img src="https://raw.githubusercontent.com/redyouzi/images-for-blog/main/img02/202208131644353.png" alt="image-20220813164434292" tabindex="0" loading="lazy"><figcaption>image-20220813164434292</figcaption></figure><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>
<span class="token keyword">create</span> <span class="token keyword">table</span> tb_user<span class="token punctuation">(</span>
    id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>
    avant <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token punctuation">,</span>
    age <span class="token keyword">int</span> <span class="token keyword">check</span> <span class="token punctuation">(</span> age <span class="token operator">between</span> <span class="token number">0</span> <span class="token operator">and</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    gender <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    desc_id <span class="token keyword">int</span> <span class="token keyword">unique</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> tb_user_desc<span class="token punctuation">(</span>
    id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>
    city <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">status</span> <span class="token keyword">tinyint</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>desc<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">alter</span> <span class="token keyword">table</span> tb_user <span class="token keyword">add</span> <span class="token keyword">constraint</span> fk_desc_id <span class="token keyword">foreign</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>desc_id<span class="token punctuation">)</span> <span class="token keyword">references</span> tb_user_desc<span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://raw.githubusercontent.com/redyouzi/images-for-blog/main/img02/202208131650540.png" alt="image-20220813165009465" tabindex="0" loading="lazy"><figcaption>image-20220813165009465</figcaption></figure></li><li><p>一对多（多对一）：</p><ul><li>如：部门和员工</li><li>一个部门对应多个员工，一个员工对应一个部门</li><li>实现方式：在<strong>多</strong>的一方建立外键关联<strong>一</strong>的一方主键</li></ul><figure><img src="https://raw.githubusercontent.com/redyouzi/images-for-blog/main/img02/202208131623436.png" alt="image-20220813162312378" tabindex="0" loading="lazy"><figcaption>image-20220813162312378</figcaption></figure></li><li><p>多对多：</p><ul><li>如：商品和订单</li><li>一个商品对应多个订单，一个订单包含多个商品</li><li>实现方式：<strong>建立第三张中间表</strong>，中间表至少<strong>包含两个外键</strong>，分别关联两方主键</li></ul><figure><img src="https://raw.githubusercontent.com/redyouzi/images-for-blog/main/img02/202208131622463.png" alt="image-20220813162242368" tabindex="0" loading="lazy"><figcaption>image-20220813162242368</figcaption></figure><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">table</span> tb_order<span class="token punctuation">(</span>
    id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>
    payment <span class="token keyword">double</span><span class="token punctuation">,</span>
    payment_type <span class="token keyword">tinyint</span><span class="token punctuation">,</span>
    <span class="token keyword">status</span> <span class="token keyword">tinyint</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> tb_goods<span class="token punctuation">(</span>
    id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>
    title <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    price <span class="token keyword">double</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> tb_order_goods<span class="token punctuation">(</span>
    id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>
    order_id <span class="token keyword">int</span><span class="token punctuation">,</span>
    goods_id <span class="token keyword">int</span><span class="token punctuation">,</span>
    count <span class="token keyword">int</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment"># 在中间表中添加外键</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> tb_order_goods <span class="token keyword">add</span> <span class="token keyword">constraint</span> fk_order_id <span class="token keyword">foreign</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>order_id<span class="token punctuation">)</span> <span class="token keyword">references</span> tb_order<span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> tb_order_goods <span class="token keyword">add</span> <span class="token keyword">constraint</span> fk_goods_id <span class="token keyword">foreign</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>goods_id<span class="token punctuation">)</span> <span class="token keyword">references</span> tb_goods<span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><figure><img src="https://raw.githubusercontent.com/redyouzi/images-for-blog/main/img02/202208131632537.png" alt="image-20220813163251421" tabindex="0" loading="lazy"><figcaption>image-20220813163251421</figcaption></figure><h2 id="多表查询" tabindex="-1"><a class="header-anchor" href="#多表查询" aria-hidden="true">#</a> 多表查询</h2><h3 id="内连接-显示-inner-join-表名-on-条件" tabindex="-1"><a class="header-anchor" href="#内连接-显示-inner-join-表名-on-条件" aria-hidden="true">#</a> 内连接-显示(inner join 表名 on 条件)</h3><figure><img src="https://raw.githubusercontent.com/redyouzi/images-for-blog/main/img02/202208131700335.png" alt="image-20220813170024222" tabindex="0" loading="lazy"><figcaption>image-20220813170024222</figcaption></figure><ol><li><p>内连接查询语法</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 隐式内连接</span>
<span class="token keyword">select</span> 字段列表 <span class="token keyword">from</span> 表<span class="token number">1</span>，表<span class="token number">2.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">where</span> 条件<span class="token punctuation">;</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token punctuation">,</span> dept <span class="token keyword">where</span> emp<span class="token punctuation">.</span>dep_id <span class="token operator">=</span> dept<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
<span class="token keyword">select</span> emp<span class="token punctuation">.</span>name<span class="token punctuation">,</span>emp<span class="token punctuation">.</span>gender<span class="token punctuation">,</span>dept<span class="token punctuation">.</span>name <span class="token keyword">from</span> emp<span class="token punctuation">,</span>dept <span class="token keyword">where</span> emp<span class="token punctuation">.</span>dep_id <span class="token operator">=</span> dept<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
<span class="token comment">-- 显示内连接</span>
<span class="token keyword">select</span> 字段列表 <span class="token keyword">from</span> 表<span class="token number">1</span> <span class="token punctuation">[</span><span class="token keyword">inner</span><span class="token punctuation">]</span> <span class="token keyword">join</span> 表<span class="token number">2</span> <span class="token keyword">on</span> 条件<span class="token punctuation">;</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">inner</span> <span class="token keyword">join</span> dep <span class="token keyword">on</span> emp<span class="token punctuation">.</span>dep_id <span class="token operator">=</span> dept<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><figure><img src="https://raw.githubusercontent.com/redyouzi/images-for-blog/main/img02/202208131703210.png" alt="image-20220813170314141" tabindex="0" loading="lazy"><figcaption>image-20220813170314141</figcaption></figure><h3 id="外连接-左-右-外连接-表1-left-right-join-表2-on-条件" tabindex="-1"><a class="header-anchor" href="#外连接-左-右-外连接-表1-left-right-join-表2-on-条件" aria-hidden="true">#</a> 外连接-左[右]外连接(表1 left[right] join 表2 on 条件)</h3><ol><li><p>外连接查询语法</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 左外连接</span>
<span class="token keyword">select</span> 字段列表 <span class="token keyword">from</span> 表<span class="token number">1</span> <span class="token keyword">left</span> <span class="token keyword">join</span> 表<span class="token number">2</span> <span class="token keyword">on</span> 条件<span class="token punctuation">;</span>
<span class="token comment">-- 右外连接</span>
<span class="token keyword">select</span> 字段列表 <span class="token keyword">from</span> 表<span class="token number">1</span> <span class="token keyword">right</span> <span class="token keyword">join</span> 表<span class="token number">2</span> <span class="token keyword">on</span> 条件<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="子查询" tabindex="-1"><a class="header-anchor" href="#子查询" aria-hidden="true">#</a> 子查询</h3><ol><li><p>子查询根据查询结果不同，作用不同：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 单行单列：作为条件值，使用 = != &gt; &lt; 等进行条件判断</span>
<span class="token keyword">select</span> 字段列表 <span class="token keyword">from</span> 表 <span class="token keyword">where</span> 字段名 <span class="token operator">=</span> <span class="token punctuation">(</span>子查询<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">-- 多行单列：作为条件值，使用in等关键字进行条件判断</span>
<span class="token keyword">select</span> 字段列表 <span class="token keyword">from</span> 表 <span class="token keyword">where</span> 字段名 <span class="token operator">in</span> <span class="token punctuation">(</span>子查询<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">-- 多行多列：作为虚拟表</span>
<span class="token keyword">select</span> 字段列表 <span class="token keyword">from</span> <span class="token punctuation">(</span>子查询<span class="token punctuation">)</span> <span class="token keyword">where</span> 条件<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://raw.githubusercontent.com/redyouzi/images-for-blog/main/img02/202208131728640.png" alt="image-20220813172807566" tabindex="0" loading="lazy"><figcaption>image-20220813172807566</figcaption></figure></li></ol><h2 id="事务" tabindex="-1"><a class="header-anchor" href="#事务" aria-hidden="true">#</a> 事务</h2><h3 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h3><ul><li>数据库的事务是一种机制、一个操作序列，包含了<strong>一组数据库操作命令</strong></li><li>事务把所有的命令作为一个整体一起向系统提交或撤销操作的请求，即这一组数据库命令<strong>要么同时成功，要么同时失败</strong></li><li>事务是一个不可分割的工作逻辑单元</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 开启事务</span>
<span class="token keyword">start</span> <span class="token keyword">transaction</span><span class="token punctuation">;</span>
<span class="token comment">-- 或者</span>
<span class="token keyword">begin</span><span class="token punctuation">;</span>

<span class="token comment">-- 提交事务</span>
<span class="token keyword">commit</span><span class="token punctuation">;</span>

<span class="token comment">-- 出异常回滚事务</span>
<span class="token keyword">rollback</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="事务的四大特征" tabindex="-1"><a class="header-anchor" href="#事务的四大特征" aria-hidden="true">#</a> 事务的四大特征</h3><ul><li>原子性（<strong>A</strong>tomicity）：<strong>事务是不可分割的最小操作单位，要么同时成功，要么同时失败</strong></li><li>一致性（<strong>C</strong>onsistency）：事务完成时，必须使所有的数据都保持一致状态</li><li>隔离性（<strong>I</strong>solation）：多个事务之间，操作的可见性</li><li>持久性（<strong>D</strong>urability）：<strong>事务一旦提交或回滚，它对数据库中的数据的改变就是永久的</strong></li></ul><p>MySQL事务默认自动提交</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 查看事务的默认提交方式</span>
<span class="token keyword">select</span> @<span class="token variable">@autocommit</span><span class="token punctuation">;</span>
<span class="token comment">-- 1 自动提交  0 手动提交</span>
<span class="token comment">-- 修改事务的提交方式</span>
<span class="token keyword">set</span> @<span class="token variable">@autocommit</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,89);function k(m,v){const a=t("ExternalLinkIcon");return p(),o("div",null,[d,n("p",null,[n("a",r,[l("https://downloads.mysql.com/archives/community/"),i(a)])]),u])}const y=e(c,[["render",k],["__file","mysql-basis.html.vue"]]);export{y as default};
